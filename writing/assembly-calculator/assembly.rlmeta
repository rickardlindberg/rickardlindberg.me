Assembly {
  expr = [pre:x instr*:ys post:z] -> [~x ~~ys ~z]
  pre = -> [
    ["section" "text"]
    ["directive" "global _start"]
    ["label" "_start"]
  ]
  instr = [%:op] -> op
  post = -> [
    ["mov"      ["addr"  "rsp"] ["reg" "rdi"]]
    ["mov"      ["const" 60   ] ["reg" "rax"]]
    ["syscall"                               ]
  ]
  ADD = -> [
    ["pop" ["reg"  "rax"]]
    ["add" ["reg"  "rax"] ["addr" "rsp"]]
  ]
  SUB = -> [
    ["pop" ["reg"  "rax"]               ]
    ["sub" ["reg"  "rax"] ["addr" "rsp"]]
  ]
  MUL = -> [
    ["pop"  ["reg"  "rax"]               ]
    ["imul" ["addr" "rsp"] ["reg"  "rax"]]
    ["mov"  ["reg"  "rax"] ["addr" "rsp"]]
  ]
  DIV = -> [
    ["pop"  ["reg"   "rbx"]              ]
    ["pop"  ["reg"   "rax"]              ]
    ["mov"  ["const" 0    ] ["reg" "edx"]]
    ["idiv" ["reg"   "rbx"]              ]
    ["push" ["reg"   "rax"]              ]
  ]
  POW = -> [
    ["f2xm1" ["reg"  "eax"] ["addr" "rsp"]]
  ]
  CONST = .:x -> [
    ["push" ["const" x]]
  ]
}
