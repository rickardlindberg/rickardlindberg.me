CodeGenerator {
  VM           = [ast:x] instructions:y .:z -> z:macros -> list():enum -> {
                   enum
                   x >
                     "while True:\n" >
                       "name = instructions[pc]\n"
                       "pc += 1\n"
                       y
                       "else:\n" >
                         "raise Exception(\"unknown instruction {}\".format(name))\n"
                       <
                     <
                   <
                 }
  Def          = .:name .:rest asts:x  -> { "def " name rest > x < }
  Instruction  = .:name asts:y         -> append(enum {name " = " len(enum) "\n"})
                                       -> { "name == " name ":\n" >
                                              y
                                              "continue\n"
                                            < }
  Line         = .:line
  Macro        = .:name .:indentprefix -> { > run("asts" get(macros name)) < }
  Arg          = .:name                -> { name " = instructions[pc]\n"
                                            "pc += 1\n" }
  asts         = ast*:xs !.            -> { xs }
  ast          = [%:x]                 -> x
  instructions = [first:x rest*:xs]    -> { x xs }
  first        = ast:x                 -> { "if "   x }
  rest         = ast:x                 -> { "elif " x }
}
