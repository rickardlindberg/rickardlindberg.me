CodeGenerator {
  VM           = [ast:x] instructions:y .:z -> z:macros -> #List():enum -> {
                   enum x >
                     "while True:\n" >
                       "name = instructions[pc]\n"
                       y
                       "else:\n" >
                         "raise Exception(\"unknown instruction {}\".format(name))\n"
                       <
                     <
                   <
                 }
  instructions = [first:x rest*:xs] -> { x xs }
  first        = ast:x              -> { "if "   x }
  rest         = ast:x              -> { "elif " x }
  Def          = .:name .:rest [asts:body] -> { "def " name rest > body < }
  Instruction  = .:name [asts:args] [asts:body] -> enum({name " = " #len(enum) "\n"}) -> { "name == " name ":\n" > args body < }
  Line         = .:line
  Macro        = .:name .:indentprefix -> { > macros(name) < }
  Arg          = .:name -> { "pc += 1\n" name " = instructions[pc]\n" }
  asts         = ast*:xs            -> { xs }
  ast          = [%:x] -> x
}
