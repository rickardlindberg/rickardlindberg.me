{
"root_page":{
"children":[
{
"children":[],
"id":"b4f6655bfb5e499997a0b1be8aa83d22",
"paragraphs":[
{
"fragments":[
{
"text":"Show what it looks like.",
"type":"text"
}
],
"id":"f9b86738eedb42d7a7605d26c6ef453a",
"type":"text"
},
{
"fragments":[
{
"text":"Show how it is implemented in RLMeta.",
"type":"text"
}
],
"id":"c4d0a4ba10e04d94b0ed0b90034714e6",
"type":"text"
},
{
"fragments":[
{
"text":"Include live demo that readers can play with.",
"type":"text"
}
],
"id":"476723b2b7e046a4a2c0b809b1ce4bfc",
"type":"text"
}
],
"title":"Expression interpreter"
},
{
"children":[],
"id":"25d640e9b62e4609b81d5b50b20a4433",
"paragraphs":[
{
"fragments":[
{
"text":"Include live demo that readers can play with.",
"type":"text"
}
],
"id":"3a4cf141dca74bfcabba53cdcef0350f",
"type":"text"
}
],
"title":"Code translator"
},
{
"children":[
{
"children":[],
"id":"a757df1ad1764cc996d9d3e0a0ce4d25",
"paragraphs":[
{
"fragments":[
{
"text":"Grammars have a ",
"type":"text"
},
{
"page_id":"19acecc9fbc44023a69cea9eadbe734d",
"text":null,
"type":"reference"
},
{
"text":" and a set of ",
"type":"text"
},
{
"page_id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"text":null,
"type":"reference"
},
{
"text":" enclosed in curly braces. ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored. When such a sequence is found a ",
"type":"text"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":" AST node is created:",
"type":"text"
}
],
"id":"8de82ec3c0f34c94af9bfc418229357e",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"42f0b42533be4f7eb54c04f22a137669",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '{' ",
"type":"code"
},
{
"id":"c8edc6f14d27480e9f737a7697f07f07",
"type":"variable"
},
{
"text":"*:ys ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '}'      -> [\"",
"type":"code"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":"\" x ~ys]\n  ;\n",
"type":"code"
}
],
"id":"41afd1b3bc8749a2bdefb2a09eb54f62",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":" AST node is matched a Python class with the same name is generated that inherits from ",
"type":"text"
},
{
"id":"6544a37a96ce4294ab4553709d89f398",
"type":"variable"
},
{
"text":":",
"type":"text"
}
],
"id":"e3e98686c73d4c7e8211846c6bb629bb",
"type":"text"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":"*:xs]    -> { 'class ' x '(",
"type":"code"
},
{
"id":"6544a37a96ce4294ab4553709d89f398",
"type":"variable"
},
{
"text":"):\\n' > xs < }\n",
"type":"code"
}
],
"id":"d3c4ef9bebd64746ab898a18575fd4ac",
"type":"code"
},
{
"fragments":[
{
"text":"The base class resides in a ",
"type":"text"
},
{
"page_id":"8b6a28adea24444d977d10d44e0a8382",
"text":null,
"type":"reference"
},
{
"text":" and provides basic pattern matching functionality.",
"type":"text"
}
],
"id":"4e3a4349f676432aa6ab703e6cd04414",
"type":"text"
},
{
"fragments":[
{
"text":"We translate the parser snippet manually according to the rules in ",
"type":"text"
},
{
"page_id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"text":null,
"type":"reference"
},
{
"text":", ",
"type":"text"
},
{
"page_id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"text":null,
"type":"reference"
},
{
"text":", ...:",
"type":"text"
}
],
"id":"4a8463cf85614c3dbe10738072ab4c51",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser_bootstrap.py"
],
"fragments":[
{
"text":"def grammar(self):\n    pass\n",
"type":"code"
}
],
"id":"996a64fb1e94418c9c45eea0f24e3c06",
"type":"code"
},
{
"fragments":[
{
"text":"We translate the code generator snippet manually according to the rules in ",
"type":"text"
},
{
"page_id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"text":null,
"type":"reference"
},
{
"text":", ...:",
"type":"text"
}
],
"id":"431f0242222e4c849756b445b164df70",
"type":"text"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen_bootstrap.py"
],
"fragments":[
{
"text":"...\n",
"type":"code"
}
],
"id":"127d9510403649b6b4c850281f0e4550",
"type":"code"
}
],
"title":"Grammar"
},
{
"children":[],
"id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"paragraphs":[
{
"fragments":[
{
"text":"Rules have a ",
"type":"text"
},
{
"page_id":"19acecc9fbc44023a69cea9eadbe734d",
"text":null,
"type":"reference"
},
{
"text":" followed by the equal sign followed by ",
"type":"text"
},
{
"page_id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"text":null,
"type":"reference"
},
{
"text":". ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored.",
"type":"text"
}
],
"id":"5e9600e66ce74fa18b69b96917889a6f",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"c8edc6f14d27480e9f737a7697f07f07",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '=' ",
"type":"code"
},
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":":y ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ';'     -> [\"",
"type":"code"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":"\" x y]\n  ;\n",
"type":"code"
}
],
"id":"f24d0daa1d1c4ddeb6b111c45aa31102",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":" AST node is matched a Python method with the same name is generated:",
"type":"text"
}
],
"id":"6018299ffc344a46978cb303eb4bdb16",
"type":"text"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]         -> { 'def ' x '(self):\\n' > 'return ' x '()\\n' < }\n",
"type":"code"
}
],
"id":"4bbfe03c503f409f9ac3233cbbd31340",
"type":"code"
}
],
"title":"Rule"
},
{
"children":[],
"id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"paragraphs":[
{
"fragments":[
{
"text":"Choices has a set of ",
"type":"text"
},
{
"page_id":"08818eb200d0482f8feb9104e1ae2ea7",
"text":null,
"type":"reference"
},
{
"text":" separated by a pipe character. Optionally the first choice can start with a pipe character to allow all choice lines to look the same. ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored.",
"type":"text"
}
],
"id":"77e39db8bc6944b8afb793e3fcf28e88",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":" =\n  | (",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '|' | nothing) ",
"type":"code"
},
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":":x\n    (",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '|' ",
"type":"code"
},
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":")*:xs                 -> [\"",
"type":"code"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":"\" x ~xs]\n  ;\n",
"type":"code"
}
],
"id":"5548c68fed5947a891639cab8086cba5",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":" AST node is found ...:",
"type":"text"
}
],
"id":"218e357da3f04861bdee4b175e32cc54",
"type":"text"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x]          -> { 'self.",
"type":"code"
},
{
"id":"2c430882d5af40168a69e1b4b9eb7e0d",
"type":"variable"
},
{
"text":"([' x '])' }\n",
"type":"code"
}
],
"id":"f85612ab9e0d444f8104eb83d1548800",
"type":"code"
}
],
"title":"Choices"
},
{
"children":[],
"id":"08818eb200d0482f8feb9104e1ae2ea7",
"paragraphs":[
{
"fragments":[
{
"text":"A sequence has one or more ",
"type":"text"
},
{
"page_id":"5fca8ddb3f88457bbe5217fa1ebf4383",
"text":null,
"type":"reference"
},
{
"text":" followed by an optional ",
"type":"text"
},
{
"page_id":"768d143c206146ca8efba292c6e9169b",
"text":null,
"type":"reference"
},
{
"text":".",
"type":"text"
}
],
"id":"a9761a1483114aebbdab2d94006de2cf",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":"*:xs                          -> [\"",
"type":"code"
},
{
"id":"b845c4cee1734619991d56de83dce37d",
"type":"variable"
},
{
"text":"\" [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" x ~xs]]\n  ;\n",
"type":"code"
}
],
"id":"a00b4131f7794b6cb496a4e8249dc9d2",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":" AST node is found ...:",
"type":"text"
}
],
"id":"99fc5181461b4b658129de1e5a9024db",
"type":"text"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"b845c4cee1734619991d56de83dce37d",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]            -> { '(lambda _vars:\\n' > x < ')(",
"type":"code"
},
{
"id":"ec2b7e954fe24f329250bd22c70538e4",
"type":"variable"
},
{
"text":"())' }\n",
"type":"code"
}
],
"id":"89d707f19bd84e5982dcc3f043a68111",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x]         -> { 'self.",
"type":"code"
},
{
"id":"c590c92167d34fe4bfdbb084c03834c1",
"type":"variable"
},
{
"text":"([' x '])' }\n",
"type":"code"
}
],
"id":"3fe2404188684b7485049b6298e4ba3e",
"type":"code"
}
],
"title":"Sequence"
},
{
"children":[],
"id":"5fca8ddb3f88457bbe5217fa1ebf4383",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":":x ':' ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":y                       -> [\"",
"type":"code"
},
{
"id":"6a519019bfac49598dc36620b5b58811",
"type":"variable"
},
{
"text":"\" y x]\n  | ",
"type":"code"
},
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":":x\n  ;\n",
"type":"code"
}
],
"id":"f1365e28cce74941892cdaa24ba6d2ad",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"6a519019bfac49598dc36620b5b58811",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":y]      -> { '_vars.bind(' x ', ' y '())' }\n",
"type":"code"
}
],
"id":"06c9e9a4f10648e090321c427cccb9b3",
"type":"code"
}
],
"title":"Expression"
},
{
"children":[],
"id":"cdeac4c7bcb84261a3d194c1183c9dd7",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '*'                        -> [\"",
"type":"code"
},
{
"id":"60d7dacf2a2b4336b0329665c2026cc0",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '!' ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":":x                        -> [\"",
"type":"code"
},
{
"id":"bc27a67cb10b4650a32bfe7af84c5060",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":"\n  ;\n",
"type":"code"
}
],
"id":"101abf29d86c4c4a82e5d95c13318ec9",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"60d7dacf2a2b4336b0329665c2026cc0",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]             -> { 'self._star(' x ')' }\n",
"type":"code"
}
],
"id":"36a128587cdd48539a5aef85b434be5b",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"bc27a67cb10b4650a32bfe7af84c5060",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]              -> { 'self._negative_lookahead(' x ')' }\n",
"type":"code"
}
],
"id":"e895e3759e684d7c9022da5bcfd693bb",
"type":"code"
}
],
"title":"Expression level 1"
},
{
"children":[],
"id":"4e76262e4c9841db8c0b79401ac7a8ff",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '->' ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":":x                      -> [\"",
"type":"code"
},
{
"id":"373f023f0f5f4744a7b309cf9a76d138",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x                                   -> [\"",
"type":"code"
},
{
"id":"4852ced8038c4074a5a8104b8596e0e0",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":":x                                 -> [\"",
"type":"code"
},
{
"id":"10d9c2de82a14d12bd545133bd4e15f8",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":":x                                -> [\"",
"type":"code"
},
{
"id":"8ff0b4980efa4e349ec5ef14815be6ec",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" 'nothing' !",
"type":"code"
},
{
"id":"6b1fe389a7254359b3fbe4cb26ea084e",
"type":"variable"
},
{
"text":"                -> [\"",
"type":"code"
},
{
"id":"736cd2768dcd4843b43aca56bea200d3",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '.'                                -> [\"",
"type":"code"
},
{
"id":"25ec6fc64b8b4a39a9df41daa690386f",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '(' ",
"type":"code"
},
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ')'            -> x\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '\\'' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":":x '-' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":":y '\\''        -> [\"",
"type":"code"
},
{
"id":"6860db9e40994ebfbe04834b4f12f721",
"type":"variable"
},
{
"text":"\" x y]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '[' ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ']'             -> [\"",
"type":"code"
},
{
"id":"0c1a9537d33148388015163fc90329b3",
"type":"variable"
},
{
"text":"\" [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" ~xs]]\n  ;\n",
"type":"code"
}
],
"id":"f05c9406eceb4daab6c376ababdb1679",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"373f023f0f5f4744a7b309cf9a76d138",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]           -> { '_Action(lambda: ' x '))' }\n",
"type":"code"
}
],
"id":"48288d82d6984e2088ee6ce8a5a5253e",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"4852ced8038c4074a5a8104b8596e0e0",
"type":"variable"
},
{
"text":"\" .:x]        -> { 'self.' x }\n",
"type":"code"
}
],
"id":"412bfecbb7244810ba46e206486092c8",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"10d9c2de82a14d12bd545133bd4e15f8",
"type":"variable"
},
{
"text":"\" .:x]        -> { 'self._match_string(' repr(x) ')' }\n",
"type":"code"
}
],
"id":"2d406fc305b34136a1280841c2098a7a",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"8ff0b4980efa4e349ec5ef14815be6ec",
"type":"variable"
},
{
"text":"\" .:x]       -> { 'self._match_charsec(' repr(x) ')' }\n",
"type":"code"
}
],
"id":"b04618e300a746c6930f0c3c5ac338dc",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"736cd2768dcd4843b43aca56bea200d3",
"type":"variable"
},
{
"text":"\"]                -> { 'None' }\n",
"type":"code"
}
],
"id":"f89b8db315ca4734a535d6ffbbf464bb",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"25ec6fc64b8b4a39a9df41daa690386f",
"type":"variable"
},
{
"text":"\"]                    -> { 'self._any' }\n",
"type":"code"
}
],
"id":"982a4ec2696d466ab86d17115f366f87",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"6860db9e40994ebfbe04834b4f12f721",
"type":"variable"
},
{
"text":"\" .:x .:y]          -> { 'self._range(' x ',' y ')' }\n",
"type":"code"
}
],
"id":"7ce8d15eb0a349e9a26f7c4b65cf23d8",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"0c1a9537d33148388015163fc90329b3",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x]        -> { 'self._match_list(' x ')' }\n",
"type":"code"
}
],
"id":"258fb08008994945961815115488a6d4",
"type":"code"
}
],
"title":"Expression level 2"
},
{
"children":[],
"id":"768d143c206146ca8efba292c6e9169b",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":":x                                 -> [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":":x                                -> [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '[' ",
"type":"code"
},
{
"id":"fe84c1eea3fc4476bbcb1c717c92d43b",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ']'   -> [\"",
"type":"code"
},
{
"id":"49ba1aa1e24e408ba2b32bff68a72840",
"type":"variable"
},
{
"text":"\" ~xs]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '{' ",
"type":"code"
},
{
"id":"ae2f859206d741eca9f5e10495cb8095",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '}'      -> [\"",
"type":"code"
},
{
"id":"c9ecfed5791644a3b7ea2122d4ed87c9",
"type":"variable"
},
{
"text":"\" ~xs]\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x '(' ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"*:xs ')'                -> [\"",
"type":"code"
},
{
"id":"0a8e6be4bec3466bb658d7d4ff5bc5fd",
"type":"variable"
},
{
"text":"\" x ~xs]\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x                                   -> [\"",
"type":"code"
},
{
"id":"ae823ab23224415f9a539b0354f311b8",
"type":"variable"
},
{
"text":"\" x]\n  ;\n",
"type":"code"
}
],
"id":"f0b031c3724e42c5a0fb9704ef64976d",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" .:x]          -> { repr(x) }\n",
"type":"code"
}
],
"id":"0fdb7fda246f4e99becb87637359df79",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"49ba1aa1e24e408ba2b32bff68a72840",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"2420b6bcf2374252a533688aa0b33b5f",
"type":"variable"
},
{
"text":":x]      -> { x }\n",
"type":"code"
}
],
"id":"47a643f9317f47afa2e6d5001b87a1ff",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"c9ecfed5791644a3b7ea2122d4ed87c9",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x]  -> { '_builder(' x ')' }\n",
"type":"code"
}
],
"id":"74eb55bab93644eca5a621d9469c86dc",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"0a8e6be4bec3466bb658d7d4ff5bc5fd",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":y] -> { x '(' y ')' }\n",
"type":"code"
}
],
"id":"a264ffede57c4b6aa108a23f741bd694",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"ae823ab23224415f9a539b0354f311b8",
"type":"variable"
},
{
"text":"\" .:x]             -> { '_vars.lookup(' repr(x) ')' }\n",
"type":"code"
}
],
"id":"544bade2ad6a463db74a4b66c7cba6f7",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"fe84c1eea3fc4476bbcb1c717c92d43b",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '~' ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x                         -> [\"",
"type":"code"
},
{
"id":"cf8770da147840679077788180e10778",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"\n  ;\n",
"type":"code"
}
],
"id":"f768cf3997814c6285c98edc162e886f",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"ae2f859206d741eca9f5e10495cb8095",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '>'                                -> [\"",
"type":"code"
},
{
"id":"d34e449a8ca740d0a4b84921fc05b25f",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '<'                                -> [\"",
"type":"code"
},
{
"id":"7b75cb86cab34645b43d69d790e6e206",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"\n  ;\n",
"type":"code"
}
],
"id":"a3c04d0cc65d41c8af8017af890e7ea4",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"d34e449a8ca740d0a4b84921fc05b25f",
"type":"variable"
},
{
"text":"\" .:x]          -> { '_indent()' }\n",
"type":"code"
}
],
"id":"1f9c2f35e18d4eac90c9b8e8a7db8b32",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"7b75cb86cab34645b43d69d790e6e206",
"type":"variable"
},
{
"text":"\" .:x]          -> { '_dedent()' }\n",
"type":"code"
}
],
"id":"c4aaf6182aa34e73924627f6961161d4",
"type":"code"
}
],
"title":"Semantic action body"
},
{
"children":[],
"id":"2057abb618bf4209950acd87fa49da5d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":"    = ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '\"' (!'\"' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":")*:xs '\"'    -> join(xs);\n",
"type":"code"
}
],
"id":"6b45edfd3ac04273aa9498dfcaa199fa",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":"   = ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '\\'' (!'\\'' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":")*:xs '\\'' -> join(xs);\n",
"type":"code"
}
],
"id":"b3ea44957e4148ab9ded5e09fbe0fcab",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":"      = '\\\\' ",
"type":"code"
},
{
"id":"4e5409ddd4a34450b3c8b4cb8bc5dd60",
"type":"variable"
},
{
"text":" | .;\n",
"type":"code"
}
],
"id":"65a3e78796854dcea2b7634d2a67bc4c",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"4e5409ddd4a34450b3c8b4cb8bc5dd60",
"type":"variable"
},
{
"text":"    = '\\\\' -> \"\\\\\" | '\\'' -> \"'\"\n          | '\"'  -> \"\\\"\" | 'n'  -> \"\\n\";\n",
"type":"code"
}
],
"id":"ec0bcd3b02bf4077aa889dabf912dbb0",
"type":"code"
}
],
"title":"Character related"
},
{
"children":[],
"id":"19acecc9fbc44023a69cea9eadbe734d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":"      = ",
"type":"code"
},
{
"id":"7befab3d0c5747d687b20830147a70fa",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"6b1fe389a7254359b3fbe4cb26ea084e",
"type":"variable"
},
{
"text":"*:xs         -> join([x ~xs]);\n",
"type":"code"
},
{
"id":"7befab3d0c5747d687b20830147a70fa",
"type":"variable"
},
{
"text":" = ",
"type":"code"
},
{
"id":"8d8408b72eb3446ab5493dad2c80477e",
"type":"variable"
},
{
"text":" | ",
"type":"code"
},
{
"id":"0051e09230894b6696a82c3f05f6740a",
"type":"variable"
},
{
"text":";\n",
"type":"code"
},
{
"id":"6b1fe389a7254359b3fbe4cb26ea084e",
"type":"variable"
},
{
"text":"  = ",
"type":"code"
},
{
"id":"8d8408b72eb3446ab5493dad2c80477e",
"type":"variable"
},
{
"text":" | ",
"type":"code"
},
{
"id":"0051e09230894b6696a82c3f05f6740a",
"type":"variable"
},
{
"text":" | ",
"type":"code"
},
{
"id":"cc14e6fceec9478c8fdb4ac3a58dbf7a",
"type":"variable"
},
{
"text":";\n",
"type":"code"
},
{
"id":"8d8408b72eb3446ab5493dad2c80477e",
"type":"variable"
},
{
"text":"     = 'a'-'z';\n",
"type":"code"
},
{
"id":"0051e09230894b6696a82c3f05f6740a",
"type":"variable"
},
{
"text":"     = 'A'-'Z';\n",
"type":"code"
},
{
"id":"cc14e6fceec9478c8fdb4ac3a58dbf7a",
"type":"variable"
},
{
"text":"     = '0'-'9';\n",
"type":"code"
}
],
"id":"1c6666fb0163411abc814856a4265683",
"type":"code"
}
],
"title":"Name"
},
{
"children":[],
"id":"d729731e037a4a5aafa6da77d2b8bdb1",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":"     = (' ' | '\\t' | '\\n')*;\n",
"type":"code"
}
],
"id":"d62875593bb44d2087124443aded53e5",
"type":"code"
}
],
"title":"Space"
},
{
"children":[],
"id":"a621d29c81334340a4f60e83003be93d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"ast"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"  | ",
"type":"code"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":":x                -> { '(lambda: ' > x < ')' }\n  ;\n",
"type":"code"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"astFnBody"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"  ;\n",
"type":"code"
}
],
"id":"bc8464b515df4cf9a0be11f8757cfa24",
"type":"code"
},
{
"fragments":[
{
"text":"The ",
"type":"text"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":" rule is not strictly needed, but without it, many rules would have to wrap its body in a lambda.",
"type":"text"
}
],
"id":"1b8ad3a855444c598a016788f32237ab",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":"    = ",
"type":"code"
},
{
"id":"ccb3f676f6314d788147dc603933cd28",
"type":"variable"
},
{
"text":"*:xs      -> { '\\n' > xs < };\n",
"type":"code"
},
{
"id":"ccb3f676f6314d788147dc603933cd28",
"type":"variable"
},
{
"text":"     = ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x            -> { x ',\\n' };\n",
"type":"code"
}
],
"id":"8f190300db404d17a2a8f5e36e95ddcd",
"type":"code"
}
],
"title":"Utils"
},
{
"children":[],
"id":"b001fb2b5992493895297e938eb6e6a0",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"id":"2420b6bcf2374252a533688aa0b33b5f",
"type":"variable"
},
{
"text":"     = ",
"type":"code"
},
{
"id":"19791660815a43e1b775ea6a29349648",
"type":"variable"
},
{
"text":"*:xs  -> { '(' xs '[])' };\n",
"type":"code"
}
],
"id":"eae26130c7a047daa3ae8fd86ea4a9b6",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"id":"19791660815a43e1b775ea6a29349648",
"type":"variable"
},
{
"text":" =\n  | [\"",
"type":"code"
},
{
"id":"cf8770da147840679077788180e10778",
"type":"variable"
},
{
"text":"\" ast:x]        -> {     x  '+' }\n  | ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x                      -> { '[' x ']+' }\n  ;\n",
"type":"code"
}
],
"id":"a9726003d9ff409aab302f66b5756a5b",
"type":"code"
}
],
"title":"List generation"
},
{
"children":[],
"id":"d9ea64bbdad3465897667ebec9d5ace1",
"paragraphs":[
{
"fragments":[
{
"text":"TODO: Render parser here!",
"type":"text"
}
],
"id":"cbbb7c4cccc8418f9b22de8fe6b91c48",
"type":"text"
},
{
"fragments":[
{
"text":"TODO: Render code generator here!",
"type":"text"
}
],
"id":"245b8164d0dc473b8854c2becb228910",
"type":"text"
}
],
"title":"Summary"
}
],
"id":"f5f122c94d3d4fa0b3a7e64a7fa0a724",
"paragraphs":[
{
"fragments":[
{
"text":"We have seen RLMeta be used to implement an interpreter for a small expression language and a code translator. Next we explore how to write a grammar that translates RLMeta itself to Python.",
"type":"text"
}
],
"id":"4b16be114c27455a870fa89af76211d5",
"type":"text"
},
{
"fragments":[
{
"text":"RLMeta is translated in two stages: the first translates RLMeta syntax to an abstract syntax tree (AST), and the second translates the AST to Python source code:",
"type":"text"
}
],
"id":"a476fb2e885b4071b0237eb5f6a17bf1",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"a304a36f0ab541209c9e8aa78f4edc46",
"type":"variable"
},
{
"text":" {\n",
"type":"code"
},
{
"path":[
"rules"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"c94ba005404c45f78e7511793da8d554",
"type":"code"
},
{
"chunkpath":[],
"filepath":[
"codegen.rlmeta"
],
"fragments":[
{
"id":"8cf9a10b04cc48a484e1cb7c6f1f2f28",
"type":"variable"
},
{
"text":" {\n",
"type":"code"
},
{
"path":[
"rules"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"1a998747fffd406f9b8f0bed1e8740a1",
"type":"code"
},
{
"fragments":[
{
"text":"We translate the parser snippet manually according to the rules in ",
"type":"text"
},
{
"page_id":"a757df1ad1764cc996d9d3e0a0ce4d25",
"text":null,
"type":"reference"
},
{
"text":":",
"type":"text"
}
],
"id":"e15758b35bd849fa958272f1878ad352",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"parser_bootstrap.py"
],
"fragments":[
{
"text":"class Parser(_RLMeta):\n",
"type":"code"
},
{
"path":[
"rules"
],
"prefix":"    ",
"type":"chunk"
}
],
"id":"4549655f96c143b28ea9dc9e2f529384",
"type":"code"
},
{
"fragments":[
{
"text":"We translate the code generator snippet manually according to the rules in ",
"type":"text"
},
{
"page_id":"a757df1ad1764cc996d9d3e0a0ce4d25",
"text":null,
"type":"reference"
},
{
"text":", ",
"type":"text"
},
{
"page_id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"text":null,
"type":"reference"
},
{
"text":", and ",
"type":"text"
},
{
"page_id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"text":null,
"type":"reference"
},
{
"text":":",
"type":"text"
}
],
"id":"669ce12e69364c3184a23416771003bf",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"codegen_bootstrap.py"
],
"fragments":[
{
"text":"class CodeGenerator(_RLMeta):\n    def ast(self):\n        ...\n",
"type":"code"
}
],
"id":"a02357700da84007a47547d026f46e78",
"type":"code"
}
],
"title":"RLMeta"
},
{
"children":[],
"id":"8b6a28adea24444d977d10d44e0a8382",
"paragraphs":[],
"title":"Support library"
},
{
"children":[],
"id":"215a5e3e82864314a5558482ec470279",
"paragraphs":[],
"title":"Bootstrapped!"
},
{
"children":[],
"id":"2cf9cc82539149ea8e9225a95f6965cd",
"paragraphs":[
{
"child_type":"unordered",
"children":[
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"How many times can a semantic action be evaluated?",
"type":"text"
}
]
}
],
"id":"9839e9dfe25e47a58b35987a6f5d6154",
"type":"list"
}
],
"title":"Discuss semantics"
}
],
"id":"9a483a4a28de4f298790297b5708b96f",
"paragraphs":[
{
"fragments":[
{
"text":"In this article we explore a simple but powerful method of implementing programming languages.",
"type":"text"
}
],
"id":"0aa7192e98bd4d02bdb9a0b059155310",
"type":"text"
}
],
"title":"Implementing programming languages"
},
"variables":{
"0051e09230894b6696a82c3f05f6740a":"upper",
"0449532c17204462b4b4681b07ac12b5":"expr1",
"08c927c12a8741f9994399078b91d0b8":"_a864d6cb43244a1ca536085dd92431af",
"0a8e6be4bec3466bb658d7d4ff5bc5fd":"RetCall",
"0c1a9537d33148388015163fc90329b3":"MatchList",
"10d9c2de82a14d12bd545133bd4e15f8":"MatchString",
"1104a6a7ec934b48a4f1db64dcd27000":"_label",
"1868228966e84ad698de9ff7fe063861":"space",
"18d86dcee79847818139f3dd7dc38d8a":"astSeq",
"19791660815a43e1b775ea6a29349648":"astListItem",
"2420b6bcf2374252a533688aa0b33b5f":"astList",
"2508a37fdce84b31a7e6093a98c57506":"BuildCharsec",
"25ec6fc64b8b4a39a9df41daa690386f":"Any",
"26534c61b2d94990abb37ceeeb648e4f":"_ors",
"28ffce2da5724d248fa88ac555d118f8":"asListItemWithNewVars",
"2aa377816ed3486da72cff7bd46190ad":"Grammar",
"2c430882d5af40168a69e1b4b9eb7e0d":"_or",
"301f08856bf54373bc5975f75a315105":"RetString",
"373f023f0f5f4744a7b309cf9a76d138":"Action",
"3e7232e282f642ab8ac4fbe709a32a99":"_result",
"41435c2c862f40c1858cd2acd0b4f0bd":"Anonymous",
"42f0b42533be4f7eb54c04f22a137669":"grammar",
"43cd203f934f45c4be5ce3906b60ca5d":"_label",
"4852ced8038c4074a5a8104b8596e0e0":"Application",
"49ba1aa1e24e408ba2b32bff68a72840":"RetList",
"4e5409ddd4a34450b3c8b4cb8bc5dd60":"escape",
"4e78a4bc50f744bb959c72b5918d9d32":"no_action",
"56c85a8b77424f849f2a1b604066439e":"_or",
"59d465325dd74411b347002179ecda0a":"_last_match",
"5bad22de76f845a68dd802dcb830efcc":"wrapFn",
"5cb361e64daa4aea9637f5b3fd6b91f0":"action",
"60d7dacf2a2b4336b0329665c2026cc0":"Star",
"6230f0917e9f4954add45c5e39a557e0":"sequence",
"63d39eb3401840e681f80ff11203b175":"action",
"63e215a62fb74cebb9c2939e751e326f":"start",
"6544a37a96ce4294ab4553709d89f398":"_RLMeta",
"680e8a08749245bc9bbc232417da1d39":"choice",
"6860db9e40994ebfbe04834b4f12f721":"Range",
"6a519019bfac49598dc36620b5b58811":"Binding",
"6b1fe389a7254359b3fbe4cb26ea084e":"nameChar",
"736cd2768dcd4843b43aca56bea200d3":"Nothing",
"739c23d655494bd8a8b9f16e3bd03a52":"wrapInAnd",
"7b75cb86cab34645b43d69d790e6e206":"RetDedent",
"7befab3d0c5747d687b20830147a70fa":"nameStart",
"7d667137ca2f4350969bcf2044d677de":"choices",
"7d82aaa0f3d34c059532d7a090654ab7":"string",
"7f941dd526284ccc8143dbbc8ae8df3b":"sequence",
"846fccf81eca4ab48a284407a1647eaa":"_vars",
"85ee4a0a694641c3aa683a15e6a0ba5d":"astItems",
"87bf33a4869b4d30944c4dd4388631a8":"statement",
"87debc7f453a48eab28b89389b5474a3":"charClass",
"8a8e32dcfa5545f7aa292dd7e696030a":"name",
"8b98e38b093140fc956b35f6cbf5018e":"ast",
"8c4b9e8c90ff4aa08d4840f8c1560522":"_match",
"8cf9a10b04cc48a484e1cb7c6f1f2f28":"CodeGenerator",
"8d17eff4871e411793cf0daf3a2ab204":"And",
"8d8408b72eb3446ab5493dad2c80477e":"lower",
"8f0ac7afdb164a6cb5287e9382330e91":"nothing",
"8ff0b4980efa4e349ec5ef14815be6ec":"MatchCharsec",
"91983a8c8ff04389a1c21c67abcebf46":"wrapInFn",
"94dd8ae9174644c2bb5e32d35f601486":"astSeqItem",
"98e8edb80565419e93902ec6ebc5b352":"choice",
"99f12ae30d1a42989f875222b33832ba":"support",
"a304a36f0ab541209c9e8aa78f4edc46":"Parser",
"a4f50e79518843e985eb9545a235ae89":"_Vars",
"a5d8a6b567934dd6a53cb34b2a18d30c":"_last_match",
"a864d6cb43244a1ca536085dd92431af":"charseq",
"aa94c870055a417b852e05100fb546c0":"BuildDedent",
"ae2f859206d741eca9f5e10495cb8095":"stringBuild",
"ae823ab23224415f9a539b0354f311b8":"RetVar",
"b09ffc5c602a482982cec2726c306ace":"withNewVars",
"b3480703b376431588d58149f19c7a13":"_star",
"b6663a67104042fe8ee0bcb72896f366":"BuildNewline",
"b845c4cee1734619991d56de83dce37d":"Scope",
"bc27a67cb10b4650a32bfe7af84c5060":"Not",
"bd6daaaf4f8a47a1991da45be10921c3":"expr2",
"be57e79c16d8421fad091ec048a56211":"RetStringBuild",
"c590c92167d34fe4bfdbb084c03834c1":"_and",
"c8edc6f14d27480e9f737a7697f07f07":"rule",
"c9ecfed5791644a3b7ea2122d4ed87c9":"RetBuilder",
"cc14e6fceec9478c8fdb4ac3a58dbf7a":"digit",
"ccb3f676f6314d788147dc603933cd28":"astItem",
"cf8770da147840679077788180e10778":"RetSplice",
"d34e449a8ca740d0a4b84921fc05b25f":"RetIndent",
"dc3d22a8b70043628b058ffd00659a5d":"BuildIndent",
"dd463f369f79475da606b1cfc2d96076":"return",
"de5ba4ce4509433c946eacf356d7cfaa":"class:x ",
"de83a3a772234966ac566909fdfb0789":"file",
"dfcaa421bd764cce9d99219c61883a45":"expr",
"e1248cbd01c54a1680793b61e7a048e1":"char",
"e22e419d7c4845389694467bfa395529":"_f49eae10880e4186a37c021e34aea403",
"e22fa3c5d4144197906cbb74af6cc83e":"Rule",
"e521dea02b37474cb05f03e800132aa2":"_last",
"ec2b7e954fe24f329250bd22c70538e4":"_Vars",
"ee43fa1a15be4277b8bdd277451eb04d":"_and",
"efa7dd37aa9e46908ed34f8d31cd476d":"Or",
"f49eae10880e4186a37c021e34aea403":"_ands",
"f8b8599256e946a08d2325d52bf8e10b":"BuildVar",
"fdd8dd7ed7f54cc487c14cc791d637e2":"wrapInOr",
"fe84c1eea3fc4476bbcb1c717c92d43b":"returnListItem",
"ff0229c63d8a4b4897faed8c38201de3":"astFnBody"
}
}