{
"root_page":{
"children":[
{
"children":[],
"id":"b4f6655bfb5e499997a0b1be8aa83d22",
"paragraphs":[
{
"fragments":[
{
"text":"The first example of RLMeta is a calculator. It recognizes basic arithmetic expressions and evaluates them. It is an interpreter for arithmetic expressions.",
"type":"text"
}
],
"id":"42f1925ded884308b12da0798d94b61e",
"type":"text"
},
{
"fragments":[
{
"text":"Overview of calculator interpreter.",
"type":"text"
}
],
"id":"a87979cf689944828bf1cc0b51214466",
"image_base64":"",
"type":"image"
},
{
"fragments":[
{
"text":"The grammar (written in RLMeta) looks like this:",
"type":"text"
}
],
"id":"dce094fd38c74606ae9b947632c01a81",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"calculator.rlmeta"
],
"fragments":[
{
"text":"Calculator {\n  expression =\n    | additive\n  additive =\n    | multitive:x '+' additive:x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> add(x y)\n    | multitive\n  multitive =\n    | digit:x '*' multitive:y ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> mul(x y)\n    | digit\n  digit =\n    | '0'-'9':x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> int(x)\n}\n",
"type":"code"
}
],
"id":"b54646c61b3f4216929bc173be5f6430",
"type":"code"
},
{
"fragments":[
{
"text":"TODO: Explain grammar.",
"type":"strong"
}
],
"id":"05e6285771874bfea5734ba3ff65aed3",
"type":"text"
},
{
"fragments":[
{
"text":"When the calculator grammar is fed to the RLMeta compiler, a program is output in a target language that is an interpreter for arithmetic expressions.",
"type":"text"
}
],
"id":"63a18e34ac1c4a7fba249b421fd031df",
"type":"text"
},
{
"fragments":[
{
"text":"Overview of calculator compilation.",
"type":"text"
}
],
"id":"b87e6570816a4e75a51c9dcb035fc2fb",
"image_base64":"",
"type":"image"
},
{
"fragments":[
{
"text":"TODO: Include live demo that readers can play with.",
"type":"strong"
}
],
"id":"476723b2b7e046a4a2c0b809b1ce4bfc",
"type":"text"
}
],
"title":"Calculator"
},
{
"children":[],
"id":"25d640e9b62e4609b81d5b50b20a4433",
"paragraphs":[
{
"fragments":[
{
"text":"The second example of RLMeta is a tree to html list conversion.",
"type":"text"
}
],
"id":"dfa7b345cb3d438fb3a3a5b0dcb2c4de",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"treeprinter.rlmeta"
],
"fragments":[
{
"text":"TreePrinter {\n  toHtmlList =\n    | toHtmlListItem:x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { \"<ul>\" x \"</ul>\" ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n    | .:x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { x ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n  toHtmlListItem =\n    | [.:x toHtmlList*:xs] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { \"<li>\" x xs \"</li>\" ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n}\n",
"type":"code"
}
],
"id":"d165ef81494a41418ee8f45c8713747e",
"type":"code"
},
{
"fragments":[
{
"text":"TODO: Include live demo that readers can play with.",
"type":"strong"
}
],
"id":"b7746a4fed574eee9c8934472a5a81f5",
"type":"text"
}
],
"title":"Tree printer"
},
{
"children":[
{
"children":[],
"id":"a621d29c81334340a4f60e83003be93d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"ast"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"  | ",
"type":"code"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '(lambda:\\n' > x < '\\n)' }\n",
"type":"code"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"astFnBody"
],
"prefix":"  ",
"type":"chunk"
}
],
"id":"bc8464b515df4cf9a0be11f8757cfa24",
"type":"code"
},
{
"fragments":[
{
"text":"The ",
"type":"text"
},
{
"id":"ff0229c63d8a4b4897faed8c38201de3",
"type":"variable"
},
{
"text":" rule is not strictly needed, but without it, many rules would have to wrap its body in a lambda.",
"type":"text"
}
],
"id":"1b8ad3a855444c598a016788f32237ab",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= ",
"type":"code"
},
{
"id":"ccb3f676f6314d788147dc603933cd28",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '\\n' > xs < ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
},
{
"id":"ccb3f676f6314d788147dc603933cd28",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { x ',\\n' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"8f190300db404d17a2a8f5e36e95ddcd",
"type":"code"
}
],
"title":"Code generator utilities"
},
{
"children":[],
"id":"a757df1ad1764cc996d9d3e0a0ce4d25",
"paragraphs":[
{
"fragments":[
{
"text":"Grammars have a ",
"type":"text"
},
{
"page_id":"19acecc9fbc44023a69cea9eadbe734d",
"text":null,
"type":"reference"
},
{
"text":" and a set of ",
"type":"text"
},
{
"page_id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"text":null,
"type":"reference"
},
{
"text":" enclosed in curly braces. ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored. When such a sequence is found a ",
"type":"text"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":" AST node is created:",
"type":"text"
}
],
"id":"8de82ec3c0f34c94af9bfc418229357e",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"42f0b42533be4f7eb54c04f22a137669",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '{' ",
"type":"code"
},
{
"id":"c8edc6f14d27480e9f737a7697f07f07",
"type":"variable"
},
{
"text":"*:ys ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '}' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":"\" x ~ys]\n",
"type":"code"
}
],
"id":"41afd1b3bc8749a2bdefb2a09eb54f62",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":" AST node is matched a Python class with the same name is generated that inherits from ",
"type":"text"
},
{
"id":"6544a37a96ce4294ab4553709d89f398",
"type":"variable"
},
{
"text":":",
"type":"text"
}
],
"id":"e3e98686c73d4c7e8211846c6bb629bb",
"type":"text"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"2aa377816ed3486da72cff7bd46190ad",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":"*:xs] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'class ' x '(",
"type":"code"
},
{
"id":"6544a37a96ce4294ab4553709d89f398",
"type":"variable"
},
{
"text":"):\\n' > xs < ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"d3c4ef9bebd64746ab898a18575fd4ac",
"type":"code"
},
{
"fragments":[
{
"text":"The base class resides in a ",
"type":"text"
},
{
"page_id":"8b6a28adea24444d977d10d44e0a8382",
"text":null,
"type":"reference"
},
{
"text":" and provides basic pattern matching functionality.",
"type":"text"
}
],
"id":"4e3a4349f676432aa6ab703e6cd04414",
"type":"text"
},
{
"child_type":"unordered",
"children":[
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"Internal names start with ",
"type":"text"
},
{
"text":"_",
"type":"code"
},
{
"text":" to not collide with grammar names (which can not contain underscore).",
"type":"text"
}
]
}
],
"id":"6f90ad118b30434d8d06361973e0eaf8",
"type":"list"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"6544a37a96ce4294ab4553709d89f398",
"type":"variable"
},
{
"text":"(object):\n\n    def __init__(self, in_stream, out_stream):\n        self.in_stream = in_stream\n        self.out_stream = out_stream\n\n    def run(self, rule_name):\n        result = getattr(self, rule_name)().",
"type":"code"
},
{
"id":"85139f1436944deab62958b8a713d8aa",
"type":"variable"
},
{
"text":"()\n        if hasattr(result, \"",
"type":"code"
},
{
"id":"56d10f7bfcfd43bb996c3f76423b067b",
"type":"variable"
},
{
"text":"\"):\n            out_stream.write(result.",
"type":"code"
},
{
"id":"56d10f7bfcfd43bb996c3f76423b067b",
"type":"variable"
},
{
"text":"())\n        else:\n            out_stream.write(result)\n\n",
"type":"code"
},
{
"path":[
"_RLMeta"
],
"prefix":"    ",
"type":"chunk"
}
],
"id":"5df5c3d0f1ae47b7821a5df66bbb63dc",
"type":"code"
}
],
"title":"Grammar"
},
{
"children":[],
"id":"e1799ddc14ce4a7f83c8f390f9bf8720",
"paragraphs":[
{
"fragments":[
{
"text":"Rules have a ",
"type":"text"
},
{
"page_id":"19acecc9fbc44023a69cea9eadbe734d",
"text":null,
"type":"reference"
},
{
"text":" followed by the equal sign followed by ",
"type":"text"
},
{
"page_id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"text":null,
"type":"reference"
},
{
"text":". ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored.",
"type":"text"
}
],
"id":"5e9600e66ce74fa18b69b96917889a6f",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"c8edc6f14d27480e9f737a7697f07f07",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '=' ",
"type":"code"
},
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":":y ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":"\" x y]\n",
"type":"code"
}
],
"id":"f24d0daa1d1c4ddeb6b111c45aa31102",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":" AST node is matched a Python method with the same name is generated:",
"type":"text"
}
],
"id":"6018299ffc344a46978cb303eb4bdb16",
"type":"text"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"e22fa3c5d4144197906cbb74af6cc83e",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'def ' x '(self):\\n' > 'return ' x '()\\n' < ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"4bbfe03c503f409f9ac3233cbbd31340",
"type":"code"
}
],
"title":"Rule"
},
{
"children":[],
"id":"c2a43ebb9a7d477f8dd7126f94bd33de",
"paragraphs":[
{
"fragments":[
{
"text":"Choices has a set of ",
"type":"text"
},
{
"page_id":"08818eb200d0482f8feb9104e1ae2ea7",
"text":null,
"type":"reference"
},
{
"text":" separated by a pipe character. Optionally the first choice can start with a pipe character to allow all choice lines to look the same. ",
"type":"text"
},
{
"page_id":"d729731e037a4a5aafa6da77d2b8bdb1",
"text":null,
"type":"reference"
},
{
"text":" is ignored.",
"type":"text"
}
],
"id":"77e39db8bc6944b8afb793e3fcf28e88",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":" =\n  | (",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '|')?\n    ",
"type":"code"
},
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":":x (",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '|' ",
"type":"code"
},
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":")*:xs ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":"\" x ~xs]\n",
"type":"code"
}
],
"id":"5548c68fed5947a891639cab8086cba5",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":" AST node is found ...:",
"type":"text"
}
],
"id":"218e357da3f04861bdee4b175e32cc54",
"type":"text"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"efa7dd37aa9e46908ed34f8d31cd476d",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self.",
"type":"code"
},
{
"id":"2c430882d5af40168a69e1b4b9eb7e0d",
"type":"variable"
},
{
"text":"([' x '])' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"f85612ab9e0d444f8104eb83d1548800",
"type":"code"
}
],
"title":"Choices"
},
{
"children":[],
"id":"08818eb200d0482f8feb9104e1ae2ea7",
"paragraphs":[
{
"fragments":[
{
"text":"A sequence has one or more ",
"type":"text"
},
{
"page_id":"5fca8ddb3f88457bbe5217fa1ebf4383",
"text":null,
"type":"reference"
},
{
"text":" followed by an optional ",
"type":"text"
},
{
"page_id":"768d143c206146ca8efba292c6e9169b",
"text":null,
"type":"reference"
},
{
"text":".",
"type":"text"
}
],
"id":"a9761a1483114aebbdab2d94006de2cf",
"type":"text"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7f941dd526284ccc8143dbbc8ae8df3b",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"b845c4cee1734619991d56de83dce37d",
"type":"variable"
},
{
"text":"\" [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" x ~xs]]\n",
"type":"code"
}
],
"id":"a00b4131f7794b6cb496a4e8249dc9d2",
"type":"code"
},
{
"fragments":[
{
"text":"When a ",
"type":"text"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":" AST node is found ...:",
"type":"text"
}
],
"id":"99fc5181461b4b658129de1e5a9024db",
"type":"text"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"b845c4cee1734619991d56de83dce37d",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '(lambda ",
"type":"code"
},
{
"id":"289a3db9c53e420da4dbdbc94a32aadf",
"type":"variable"
},
{
"text":":\\n' > x < ')(",
"type":"code"
},
{
"id":"ec2b7e954fe24f329250bd22c70538e4",
"type":"variable"
},
{
"text":"())' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"89d707f19bd84e5982dcc3f043a68111",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"ec2b7e954fe24f329250bd22c70538e4",
"type":"variable"
},
{
"text":"(dict):\n\n    def ",
"type":"code"
},
{
"id":"1659fb73179a4fd8abfc99b95d9f5560",
"type":"variable"
},
{
"text":"(self, name, value):\n        self[name] = value\n        return value\n\n    def ",
"type":"code"
},
{
"id":"ea57b40b324c4c03b030c78e924ed860",
"type":"variable"
},
{
"text":"(self, name):\n        return self[name]\n",
"type":"code"
}
],
"id":"6a0b126c11d4408794c26291e417257d",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self.",
"type":"code"
},
{
"id":"c590c92167d34fe4bfdbb084c03834c1",
"type":"variable"
},
{
"text":"([' x '])' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"3fe2404188684b7485049b6298e4ba3e",
"type":"code"
}
],
"title":"Sequence"
},
{
"children":[
{
"children":[],
"id":"b8cb18599a164355bb86aaaff6ad17fd",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ':' ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":y ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"6a519019bfac49598dc36620b5b58811",
"type":"variable"
},
{
"text":"\" y x]\n",
"type":"code"
}
],
"id":"e2bbebd2652749d69135a786b213433c",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"6a519019bfac49598dc36620b5b58811",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":y] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"289a3db9c53e420da4dbdbc94a32aadf",
"type":"variable"
},
{
"text":".",
"type":"code"
},
{
"id":"1659fb73179a4fd8abfc99b95d9f5560",
"type":"variable"
},
{
"text":"(' x ', ' y '())' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"06c9e9a4f10648e090321c427cccb9b3",
"type":"code"
}
],
"title":"Variable binding"
},
{
"children":[],
"id":"a3347ee36d804f018a8e240b444270f4",
"paragraphs":[
{
"code_id":"f1365e28cce74941892cdaa24ba6d2ad",
"id":"0a3c02540ada4028919db01c757cb505",
"type":"expanded_code"
}
],
"title":"Summary"
}
],
"id":"5fca8ddb3f88457bbe5217fa1ebf4383",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"expr"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"  | ",
"type":"code"
},
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":"\n",
"type":"code"
}
],
"id":"f1365e28cce74941892cdaa24ba6d2ad",
"type":"code"
}
],
"title":"Expression"
},
{
"children":[
{
"children":[],
"id":"50148e1af0a140f688237ea7ab96908a",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr1"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '*' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"60d7dacf2a2b4336b0329665c2026cc0",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"0cb52720d8524ebaa24d9853d0fbfa78",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"60d7dacf2a2b4336b0329665c2026cc0",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self.",
"type":"code"
},
{
"id":"70c457e3514948bcb6c00b67e5a180a2",
"type":"variable"
},
{
"text":"(' x ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"36a128587cdd48539a5aef85b434be5b",
"type":"code"
},
{
"chunkpath":[
"classes",
"_RLMeta"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"def ",
"type":"code"
},
{
"id":"70c457e3514948bcb6c00b67e5a180a2",
"type":"variable"
},
{
"text":"(self):\n    pass\n",
"type":"code"
}
],
"id":"6d7dbee1acd04445a3fa837210e6a42d",
"type":"code"
}
],
"title":"Klene star"
},
{
"children":[],
"id":"51b34dab39be41d58f5842a152f56a2c",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr1"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '?' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"630b364d3e7345c098bc8cff819f4d99",
"type":"variable"
},
{
"text":"\" x [\"",
"type":"code"
},
{
"id":"736cd2768dcd4843b43aca56bea200d3",
"type":"variable"
},
{
"text":"\"]]\n",
"type":"code"
}
],
"id":"11d2b95572e24714ba973c1e7a225282",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"736cd2768dcd4843b43aca56bea200d3",
"type":"variable"
},
{
"text":"\"] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'None' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"f89b8db315ca4734a535d6ffbbf464bb",
"type":"code"
}
],
"title":"Maybe"
},
{
"children":[],
"id":"0e182c46c2bd407f85dff1cb7b5bbaa7",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr1"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '!' ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"bc27a67cb10b4650a32bfe7af84c5060",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"e56a131ffdbe4a649a3e11d1e589a76d",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"bc27a67cb10b4650a32bfe7af84c5060",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self._negative_lookahead(' x ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"e895e3759e684d7c9022da5bcfd693bb",
"type":"code"
}
],
"title":"Negative lookahead"
},
{
"children":[],
"id":"7459bfc0c6a344b687499647046f326d",
"paragraphs":[
{
"code_id":"101abf29d86c4c4a82e5d95c13318ec9",
"id":"d14206bf57634f238a7a4d581284622b",
"type":"expanded_code"
}
],
"title":"Summary"
}
],
"id":"cdeac4c7bcb84261a3d194c1183c9dd7",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"0449532c17204462b4b4681b07ac12b5",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"expr1"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"  | ",
"type":"code"
},
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":"\n",
"type":"code"
}
],
"id":"101abf29d86c4c4a82e5d95c13318ec9",
"type":"code"
}
],
"title":"Expression level 1"
},
{
"children":[
{
"children":[],
"id":"345f0cd3350b41129485f72b333a910f",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '->' ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"373f023f0f5f4744a7b309cf9a76d138",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"abbc1c45efe94a719d1fe1ab62ca8a49",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"373f023f0f5f4744a7b309cf9a76d138",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"cbbcd925bc2c42b9add24aaa736f4d35",
"type":"variable"
},
{
"text":"(lambda: ' x '))' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"48288d82d6984e2088ee6ce8a5a5253e",
"type":"code"
},
{
"child_type":"unordered",
"children":[
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"How many times can a semantic action be evaluated?",
"type":"text"
}
]
}
],
"id":"9839e9dfe25e47a58b35987a6f5d6154",
"type":"list"
}
],
"title":"Semantic action"
},
{
"children":[],
"id":"bf5ee2b347c7472fa301e780218e5ea6",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x !(",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '=') ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"4852ced8038c4074a5a8104b8596e0e0",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"ec59067ab11540bfa013d3856c713db8",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"4852ced8038c4074a5a8104b8596e0e0",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self.' x ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"412bfecbb7244810ba46e206486092c8",
"type":"code"
}
],
"title":"Rule application"
},
{
"children":[],
"id":"2736f10773da4b9eb5491e08e0ebd1c0",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"793e09d183c5498fa2587841cd94c126",
"type":"variable"
},
{
"text":":x '-' ",
"type":"code"
},
{
"id":"793e09d183c5498fa2587841cd94c126",
"type":"variable"
},
{
"text":":y ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"6860db9e40994ebfbe04834b4f12f721",
"type":"variable"
},
{
"text":"\" x y]\n",
"type":"code"
}
],
"id":"c450a47241a448689d950257aa817da7",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"6860db9e40994ebfbe04834b4f12f721",
"type":"variable"
},
{
"text":"\" .:x .:y] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self.",
"type":"code"
},
{
"id":"53acf505e0ee41de85c674e211ecd39c",
"type":"variable"
},
{
"text":"(' x ',' y ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"7ce8d15eb0a349e9a26f7c4b65cf23d8",
"type":"code"
}
],
"title":"Match character range"
},
{
"children":[],
"id":"51a7017fa0d94bbb8534e172ea74c373",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"10d9c2de82a14d12bd545133bd4e15f8",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"2e68adc773b945baa4039acf18cb9408",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"10d9c2de82a14d12bd545133bd4e15f8",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self._match_string(' repr(x) ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"2d406fc305b34136a1280841c2098a7a",
"type":"code"
}
],
"title":"Match string"
},
{
"children":[],
"id":"a4a9dc04e97c4e7e996cd27847399a90",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"8ff0b4980efa4e349ec5ef14815be6ec",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"bda22384f17e40ea8edd13f87f8b9f8c",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"8ff0b4980efa4e349ec5ef14815be6ec",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self._match_charsec(' repr(x) ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"b04618e300a746c6930f0c3c5ac338dc",
"type":"code"
}
],
"title":"Match character sequence"
},
{
"children":[],
"id":"e2c6fe8b8282406ebf41299436d3d9c4",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '.' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"25ec6fc64b8b4a39a9df41daa690386f",
"type":"variable"
},
{
"text":"\"]\n",
"type":"code"
}
],
"id":"cefd75a91eac4a14bda7f8123c41dd8f",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"25ec6fc64b8b4a39a9df41daa690386f",
"type":"variable"
},
{
"text":"\"] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self._any' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"982a4ec2696d466ab86d17115f366f87",
"type":"code"
}
],
"title":"Match any"
},
{
"children":[],
"id":"d62f1ed095594a5c8f8e3d2d34dbed3e",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '(' ",
"type":"code"
},
{
"id":"7d667137ca2f4350969bcf2044d677de",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ')' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> x\n",
"type":"code"
}
],
"id":"c013d1870d9d4a42bf491400b4d40ef9",
"type":"code"
}
],
"title":"Match anonymous rule"
},
{
"children":[],
"id":"0db1882b30d44178a35a7ac4276e025e",
"paragraphs":[
{
"chunkpath":[
"rules",
"expr2"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '[' ",
"type":"code"
},
{
"id":"dfcaa421bd764cce9d99219c61883a45",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ']' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"0c1a9537d33148388015163fc90329b3",
"type":"variable"
},
{
"text":"\" [\"",
"type":"code"
},
{
"id":"8d17eff4871e411793cf0daf3a2ab204",
"type":"variable"
},
{
"text":"\" ~xs]]\n",
"type":"code"
}
],
"id":"90062785865d4c69bf5b887ef2dc3977",
"type":"code"
},
{
"chunkpath":[
"rules",
"astFnBody"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"0c1a9537d33148388015163fc90329b3",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { 'self._match_list(' x ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"258fb08008994945961815115488a6d4",
"type":"code"
}
],
"title":"Match list"
},
{
"children":[],
"id":"40ce9764a79c46a298f3df0fc1abd253",
"paragraphs":[
{
"code_id":"f05c9406eceb4daab6c376ababdb1679",
"id":"985454da96df46d6b23b07b4c27c36aa",
"type":"expanded_code"
}
],
"title":"Summary"
}
],
"id":"4e76262e4c9841db8c0b79401ac7a8ff",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"bd6daaaf4f8a47a1991da45be10921c3",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"expr2"
],
"prefix":"  ",
"type":"chunk"
}
],
"id":"f05c9406eceb4daab6c376ababdb1679",
"type":"code"
}
],
"title":"Expression level 2"
},
{
"children":[
{
"children":[],
"id":"917ff3b686574c36ad433b23d6afd17e",
"paragraphs":[
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"4e8a93fe7e314817be5d38733f388eb0",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { repr(x) ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"0fdb7fda246f4e99becb87637359df79",
"type":"code"
}
],
"title":"String"
},
{
"children":[],
"id":"61c0f80a8e5f4522bcdd9e4f7b143f27",
"paragraphs":[
{
"fragments":[
{
"text":"Character sequence is just another way to say a string:",
"type":"text"
}
],
"id":"0044d259ce224f5eb078f8b0ac349194",
"type":"text"
},
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"301f08856bf54373bc5975f75a315105",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"2160b0ae8ebd40b48f737d38078bfc4c",
"type":"code"
}
],
"title":"Character sequence"
},
{
"children":[],
"id":"35696c60128141d2a3f7e65bb332c9e0",
"paragraphs":[
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '[' ",
"type":"code"
},
{
"id":"fe84c1eea3fc4476bbcb1c717c92d43b",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ']' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"49ba1aa1e24e408ba2b32bff68a72840",
"type":"variable"
},
{
"text":"\" ~xs]\n",
"type":"code"
}
],
"id":"cd1e8eee75404c96b632dc01c89fa462",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"fe84c1eea3fc4476bbcb1c717c92d43b",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '~' ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"cf8770da147840679077788180e10778",
"type":"variable"
},
{
"text":"\" x]\n  | ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"\n",
"type":"code"
}
],
"id":"f768cf3997814c6285c98edc162e886f",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"49ba1aa1e24e408ba2b32bff68a72840",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"2420b6bcf2374252a533688aa0b33b5f",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { x ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"47a643f9317f47afa2e6d5001b87a1ff",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"id":"2420b6bcf2374252a533688aa0b33b5f",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= ",
"type":"code"
},
{
"id":"19791660815a43e1b775ea6a29349648",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '(' xs '[])' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"eae26130c7a047daa3ae8fd86ea4a9b6",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"id":"19791660815a43e1b775ea6a29349648",
"type":"variable"
},
{
"text":" =\n  | [\"",
"type":"code"
},
{
"id":"cf8770da147840679077788180e10778",
"type":"variable"
},
{
"text":"\" ast:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> {     x  '+' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n  | ",
"type":"code"
},
{
"id":"8b98e38b093140fc956b35f6cbf5018e",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '[' x ']+' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"a9726003d9ff409aab302f66b5756a5b",
"type":"code"
}
],
"title":"List"
},
{
"children":[],
"id":"05fae809599640ff8c0ef6ab4a21212b",
"paragraphs":[
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '{' ",
"type":"code"
},
{
"id":"ae2f859206d741eca9f5e10495cb8095",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '}' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"c9ecfed5791644a3b7ea2122d4ed87c9",
"type":"variable"
},
{
"text":"\" ~xs]\n",
"type":"code"
}
],
"id":"f2c2d41020ba4ad096e1c27393549301",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"ae2f859206d741eca9f5e10495cb8095",
"type":"variable"
},
{
"text":" =\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '>' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"d34e449a8ca740d0a4b84921fc05b25f",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '<' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"7b75cb86cab34645b43d69d790e6e206",
"type":"variable"
},
{
"text":"\"]\n  | ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"\n",
"type":"code"
}
],
"id":"a3c04d0cc65d41c8af8017af890e7ea4",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"c9ecfed5791644a3b7ea2122d4ed87c9",
"type":"variable"
},
{
"text":"\" ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":".",
"type":"code"
},
{
"id":"2e8a56ad01dc4a289fbd584bc4874e7e",
"type":"variable"
},
{
"text":"([' x '])' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"74eb55bab93644eca5a621d9469c86dc",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"d34e449a8ca740d0a4b84921fc05b25f",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"7d8a78dfe90743759bdd25cf45506815",
"type":"variable"
},
{
"text":"()' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"1f9c2f35e18d4eac90c9b8e8a7db8b32",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"7b75cb86cab34645b43d69d790e6e206",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"bfaedafcea7445e7b7ed19c9abb47736",
"type":"variable"
},
{
"text":"()' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"c4aaf6182aa34e73924627f6961161d4",
"type":"code"
},
{
"chunkpath":[
"base classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"(object):\n\n    @classmethod\n    def ",
"type":"code"
},
{
"id":"2e8a56ad01dc4a289fbd584bc4874e7e",
"type":"variable"
},
{
"text":"(self, item):\n        if isinstance(item, ",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"):\n            return item\n        elif isinstance(item, list):\n            return ",
"type":"code"
},
{
"id":"b277e0c5612d4697bf8f8237494f8474",
"type":"variable"
},
{
"text":"([",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":".create(x) for x in item])\n        else:\n            return ",
"type":"code"
},
{
"id":"50ee7994db484890abbeeb13330e22a7",
"type":"variable"
},
{
"text":"(item)\n\n",
"type":"code"
},
{
"path":[
"_Builder"
],
"prefix":"    ",
"type":"chunk"
}
],
"id":"b2a22c8337774967bcccbdd94d6d03a7",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"b277e0c5612d4697bf8f8237494f8474",
"type":"variable"
},
{
"text":"(",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"):\n\n    def __init__(self, items):\n        self.items = items\n\n    def ",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(self, output):\n        for item in self.items:\n            item.",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(output)\n",
"type":"code"
}
],
"id":"fc7990fb7a544e24b79a140198b69c8b",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"50ee7994db484890abbeeb13330e22a7",
"type":"variable"
},
{
"text":"(",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"):\n\n    def __init__(self, atom):\n        self.atom = atom\n\n    def ",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(self, output):\n        output.",
"type":"code"
},
{
"id":"af5dbdd6e27c451398b2b116b5ff42d3",
"type":"variable"
},
{
"text":"(str(self.atom))\n",
"type":"code"
}
],
"id":"fd6eef92c8274c64a71d219fb2084dce",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"7d8a78dfe90743759bdd25cf45506815",
"type":"variable"
},
{
"text":"(",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"):\n\n    def ",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(self, output):\n        output.",
"type":"code"
},
{
"id":"8cb500cdd43d41a78158c645da945c70",
"type":"variable"
},
{
"text":"()\n",
"type":"code"
}
],
"id":"533041ab85ef4e13a5bdfd440fe344fa",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"bfaedafcea7445e7b7ed19c9abb47736",
"type":"variable"
},
{
"text":"(",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":"):\n\n    def ",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(self, output):\n        output.",
"type":"code"
},
{
"id":"22163f4ee0fd4e68b2c95f94e111dee1",
"type":"variable"
},
{
"text":"()\n",
"type":"code"
}
],
"id":"cc6e0edd65614f4b8c470b167c521bd5",
"type":"code"
},
{
"chunkpath":[
"base classes",
"_Builder"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"def ",
"type":"code"
},
{
"id":"56d10f7bfcfd43bb996c3f76423b067b",
"type":"variable"
},
{
"text":"(self):\n    output = ",
"type":"code"
},
{
"id":"4c38cde583ac42ea8c7b9295a92e26f2",
"type":"variable"
},
{
"text":"()\n    self.",
"type":"code"
},
{
"id":"a5837c091631449aadeeaa004ae71b0b",
"type":"variable"
},
{
"text":"(output)\n    return output.value\n",
"type":"code"
}
],
"id":"795bcf7836b44c17996097b87dddd617",
"type":"code"
},
{
"chunkpath":[
"classes"
],
"filepath":[
"support.py"
],
"fragments":[
{
"text":"class ",
"type":"code"
},
{
"id":"4c38cde583ac42ea8c7b9295a92e26f2",
"type":"variable"
},
{
"text":"(object):\n\n    def __init__(self):\n        self.value = \"\"\n        self.level = 0\n\n    def ",
"type":"code"
},
{
"id":"8cb500cdd43d41a78158c645da945c70",
"type":"variable"
},
{
"text":"(self):\n        self.level += 1\n\n    def ",
"type":"code"
},
{
"id":"22163f4ee0fd4e68b2c95f94e111dee1",
"type":"variable"
},
{
"text":"(self):\n        self.level -= 1\n\n    def ",
"type":"code"
},
{
"id":"af5dbdd6e27c451398b2b116b5ff42d3",
"type":"variable"
},
{
"text":"(self, value):\n        for ch in value:\n            if self.value and ch != \"\\n\" and self.value[-1] == \"\\n\":\n                self.value += \"    \"*self.level\n            self.value += ch\n",
"type":"code"
}
],
"id":"fc6caf4810f146e1aac2556d5a12e242",
"type":"code"
},
{
"chunkpath":[],
"filepath":[
"test.py"
],
"fragments":[
{
"text":"import support\n\nprint(support.",
"type":"code"
},
{
"id":"49dc22ba19624755a18a13a9e76734b1",
"type":"variable"
},
{
"text":".",
"type":"code"
},
{
"id":"2e8a56ad01dc4a289fbd584bc4874e7e",
"type":"variable"
},
{
"text":"([\n    \"class Hello(object):\\n\",\n    support.",
"type":"code"
},
{
"id":"7d8a78dfe90743759bdd25cf45506815",
"type":"variable"
},
{
"text":"(),\n    [\n        \"pass\\n\\n\",\n    ],\n    support.",
"type":"code"
},
{
"id":"bfaedafcea7445e7b7ed19c9abb47736",
"type":"variable"
},
{
"text":"(),\n    \"the end\\n\"\n]).",
"type":"code"
},
{
"id":"56d10f7bfcfd43bb996c3f76423b067b",
"type":"variable"
},
{
"text":"())\n",
"type":"code"
}
],
"id":"e0c454afa404472a9965cc0d99e8b9fa",
"type":"code"
}
],
"title":"\"Builder\""
},
{
"children":[],
"id":"813b6da1fa2e42de8b3bc44b4fbd38d7",
"paragraphs":[
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" '(' ",
"type":"code"
},
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ')' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"0a8e6be4bec3466bb658d7d4ff5bc5fd",
"type":"variable"
},
{
"text":"\" x ~xs]\n",
"type":"code"
}
],
"id":"009c0123d4f84ea7bc5b644789e03d58",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"0a8e6be4bec3466bb658d7d4ff5bc5fd",
"type":"variable"
},
{
"text":"\" .:x ",
"type":"code"
},
{
"id":"85ee4a0a694641c3aa683a15e6a0ba5d",
"type":"variable"
},
{
"text":":y] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { x '(' y ')' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"a264ffede57c4b6aa108a23f741bd694",
"type":"code"
}
],
"title":"Function call"
},
{
"children":[],
"id":"f05f1564a35d4da3922d3b9672384352",
"paragraphs":[
{
"chunkpath":[
"rules",
"hostExpr"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"text":"| ",
"type":"code"
},
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> [\"",
"type":"code"
},
{
"id":"ae823ab23224415f9a539b0354f311b8",
"type":"variable"
},
{
"text":"\" x]\n",
"type":"code"
}
],
"id":"e4954a411cdc4eee98faa1985f1de417",
"type":"code"
},
{
"chunkpath":[
"rules",
"ast"
],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"text":"| [\"",
"type":"code"
},
{
"id":"ae823ab23224415f9a539b0354f311b8",
"type":"variable"
},
{
"text":"\" .:x] ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> { '",
"type":"code"
},
{
"id":"289a3db9c53e420da4dbdbc94a32aadf",
"type":"variable"
},
{
"text":".",
"type":"code"
},
{
"id":"ea57b40b324c4c03b030c78e924ed860",
"type":"variable"
},
{
"text":"(' repr(x) ').",
"type":"code"
},
{
"id":"85139f1436944deab62958b8a713d8aa",
"type":"variable"
},
{
"text":"()' ",
"type":"code"
},
{
"index":20,
"type":"tabstop"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"544bade2ad6a463db74a4b66c7cba6f7",
"type":"code"
}
],
"title":"Variable lookup"
},
{
"children":[],
"id":"e92c3fb9637c4f669dca6d5198797ca5",
"paragraphs":[
{
"code_id":"f0b031c3724e42c5a0fb9704ef64976d",
"id":"2b12d7a5d32f41fe9a72535f740ac70c",
"type":"expanded_code"
}
],
"title":"Summary"
}
],
"id":"768d143c206146ca8efba292c6e9169b",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"dd463f369f79475da606b1cfc2d96076",
"type":"variable"
},
{
"text":" =\n",
"type":"code"
},
{
"path":[
"hostExpr"
],
"prefix":"  ",
"type":"chunk"
}
],
"id":"f0b031c3724e42c5a0fb9704ef64976d",
"type":"code"
}
],
"title":"Host (Python) expression"
},
{
"children":[],
"id":"2057abb618bf4209950acd87fa49da5d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"7d82aaa0f3d34c059532d7a090654ab7",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= '\"' (!'\"' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":")*:xs '\"' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> join(xs)\n",
"type":"code"
}
],
"id":"6b45edfd3ac04273aa9498dfcaa199fa",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"a864d6cb43244a1ca536085dd92431af",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= '\\'' (!'\\'' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":")*:xs '\\'' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> join(xs)\n",
"type":"code"
}
],
"id":"b3ea44957e4148ab9ded5e09fbe0fcab",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"793e09d183c5498fa2587841cd94c126",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= '\\'' !'\\'' ",
"type":"code"
},
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":":x '\\'' ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> join(x)\n",
"type":"code"
}
],
"id":"f33996b91f214a82b9bc2e4a0c75ffff",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"e1248cbd01c54a1680793b61e7a048e1",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= '\\\\' ",
"type":"code"
},
{
"id":"4e5409ddd4a34450b3c8b4cb8bc5dd60",
"type":"variable"
},
{
"text":" | .\n",
"type":"code"
}
],
"id":"65a3e78796854dcea2b7634d2a67bc4c",
"type":"code"
},
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"4e5409ddd4a34450b3c8b4cb8bc5dd60",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= '\\\\' -> \"\\\\\" | '\\'' -> \"'\"\n",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"| '\"'  -> \"\\\"\" | 'n'  -> \"\\n\"\n",
"type":"code"
}
],
"id":"ec0bcd3b02bf4077aa889dabf912dbb0",
"type":"code"
}
],
"title":"Character related"
},
{
"children":[],
"id":"19acecc9fbc44023a69cea9eadbe734d",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"8a8e32dcfa5545f7aa292dd7e696030a",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= ",
"type":"code"
},
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"id":"7befab3d0c5747d687b20830147a70fa",
"type":"variable"
},
{
"text":":x ",
"type":"code"
},
{
"id":"6b1fe389a7254359b3fbe4cb26ea084e",
"type":"variable"
},
{
"text":"*:xs ",
"type":"code"
},
{
"index":10,
"type":"tabstop"
},
{
"text":"-> join([x ~xs])\n",
"type":"code"
},
{
"id":"7befab3d0c5747d687b20830147a70fa",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= 'a'-'z' | 'A'-'Z'\n",
"type":"code"
},
{
"id":"6b1fe389a7254359b3fbe4cb26ea084e",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= 'a'-'z' | 'A'-'Z' | '0'-'9'\n",
"type":"code"
}
],
"id":"1c6666fb0163411abc814856a4265683",
"type":"code"
}
],
"title":"Name"
},
{
"children":[],
"id":"d729731e037a4a5aafa6da77d2b8bdb1",
"paragraphs":[
{
"chunkpath":[
"rules"
],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"1868228966e84ad698de9ff7fe063861",
"type":"variable"
},
{
"text":" ",
"type":"code"
},
{
"index":5,
"type":"tabstop"
},
{
"text":"= (' ' | '\\t' | '\\n')*\n",
"type":"code"
}
],
"id":"d62875593bb44d2087124443aded53e5",
"type":"code"
}
],
"title":"Space"
},
{
"children":[],
"id":"d9ea64bbdad3465897667ebec9d5ace1",
"paragraphs":[
{
"fragments":[
{
"text":"The complete parser:",
"type":"text"
}
],
"id":"cbbb7c4cccc8418f9b22de8fe6b91c48",
"type":"text"
},
{
"code_id":"c94ba005404c45f78e7511793da8d554",
"id":"104b3c249d084df2b43eebd29698f0f9",
"type":"expanded_code"
},
{
"fragments":[
{
"text":"The complete code generator:",
"type":"text"
}
],
"id":"245b8164d0dc473b8854c2becb228910",
"type":"text"
},
{
"code_id":"1a998747fffd406f9b8f0bed1e8740a1",
"id":"fc830b863d064f7eabe2e1ed36640b3f",
"type":"expanded_code"
}
],
"title":"Summary"
}
],
"id":"f5f122c94d3d4fa0b3a7e64a7fa0a724",
"paragraphs":[
{
"fragments":[
{
"text":"I have shown you how RLMeta can be used to implement a calculator and a tree printer. Next I will show you how to use RLMeta to translate RLMeta grammars to executable Python code. That is how to implement the RLMeta compiler.",
"type":"text"
}
],
"id":"4b16be114c27455a870fa89af76211d5",
"type":"text"
},
{
"fragments":[
{
"text":"RLMeta grammars are translated in two stages: the first translates grammar syntax to an abstract syntax tree (AST) and the second translates the AST to Python source code. The generated Python code depends on a support library to execute. Then combined Python code makes up the parser, interpreter, compiler, etc.",
"type":"text"
}
],
"id":"a476fb2e885b4071b0237eb5f6a17bf1",
"type":"text"
},
{
"fragments":[
{
"text":"RLMeta compiler illustrated.",
"type":"text"
}
],
"id":"630f0731e76141dfba74a05cbdff81ed",
"image_base64":"",
"type":"image"
},
{
"fragments":[
{
"text":"In order to implement the RLMeta compiler, the grammar for the parser and code generator have to be written. That is done in RLMeta. And the support Python library must be written. Here they are:",
"type":"text"
}
],
"id":"80d695938fd840019e3e4abd8b43ef05",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"parser.rlmeta"
],
"fragments":[
{
"id":"a304a36f0ab541209c9e8aa78f4edc46",
"type":"variable"
},
{
"text":" {\n",
"type":"code"
},
{
"path":[
"rules"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"c94ba005404c45f78e7511793da8d554",
"type":"code"
},
{
"chunkpath":[],
"filepath":[
"codegenerator.rlmeta"
],
"fragments":[
{
"id":"8cf9a10b04cc48a484e1cb7c6f1f2f28",
"type":"variable"
},
{
"text":" {\n",
"type":"code"
},
{
"path":[
"rules"
],
"prefix":"  ",
"type":"chunk"
},
{
"text":"}\n",
"type":"code"
}
],
"id":"1a998747fffd406f9b8f0bed1e8740a1",
"type":"code"
},
{
"chunkpath":[],
"filepath":[
"support.py"
],
"fragments":[
{
"path":[
"base classes"
],
"prefix":"",
"type":"chunk"
},
{
"path":[
"classes"
],
"prefix":"",
"type":"chunk"
},
{
"path":[
"functions"
],
"prefix":"",
"type":"chunk"
}
],
"id":"36fdd2e9ccf7430bbf84158437d5c067",
"type":"code"
},
{
"fragments":[
{
"text":"The remainder of this section will fill in the details of those three files.",
"type":"text"
}
],
"id":"bc1ada63d87b459fbdffcd4e0b52d602",
"type":"text"
}
],
"title":"RLMeta in itself"
},
{
"children":[],
"id":"313b147a2f574ea09d76d9c7371bdf18",
"paragraphs":[
{
"fragments":[
{
"text":"If we run RLmeta on our parser and code generator we should get functionality that implements RLMeta itself. But how can we run RLMeta before we have it?",
"type":"text"
}
],
"id":"97be5f1d197342b8a567f17d45d8db10",
"type":"text"
}
],
"title":"Bootstrapping"
},
{
"children":[],
"id":"2651c102332c47b892977377323416b7",
"paragraphs":[
{
"child_type":"unordered",
"children":[
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"Alan Kay",
"type":"text"
}
]
},
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"STEPS",
"type":"text"
}
]
},
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"META II",
"type":"text"
}
]
},
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"OMeta",
"type":"text"
}
]
},
{
"child_type":null,
"children":[],
"fragments":[
{
"text":"Ohm",
"type":"text"
}
]
}
],
"id":"04202345600343e3a240709206c19590",
"type":"list"
}
],
"title":"Similar projects / inspiration"
}
],
"id":"9a483a4a28de4f298790297b5708b96f",
"paragraphs":[
{
"fragments":[
{
"text":"In this article I present RLMeta, a domain specific language for writing parsers, interpreters, compilers, etc.",
"type":"text"
}
],
"id":"0aa7192e98bd4d02bdb9a0b059155310",
"type":"text"
},
{
"fragments":[
{
"text":"In RLMeta you write grammars that specify how to match objects from the input. With semantic actions you specify what should happen when objects are matched.",
"type":"text"
}
],
"id":"f02eaf34f684451a842b6d275b1361f4",
"type":"text"
},
{
"fragments":[
{
"text":"The RLMeta compiler translates grammars into programs in a target language that recognizes the objects specified in the grammar and performs the semantic actions when the objects are matched. Depending on the semantic actions, the output from RLMeta is either a parser, interpreter, compiler, etc.",
"type":"text"
}
],
"id":"dabc7ecca02244b088ce2018fe46981d",
"type":"text"
},
{
"fragments":[
{
"text":"Overview of RLMeta compiler.",
"type":"text"
}
],
"id":"93f918b4e1e7472a8b1077399152b7ec",
"image_base64":"",
"type":"image"
},
{
"fragments":[
{
"text":"I will illustrate RLMeta with a series of examples.",
"type":"text"
}
],
"id":"c617755ef5da415880b3f91a7cc8c912",
"type":"text"
}
],
"title":"RLMeta"
},
"variables":{
"0051e09230894b6696a82c3f05f6740a":"upper",
"0449532c17204462b4b4681b07ac12b5":"expr1",
"08c927c12a8741f9994399078b91d0b8":"_a864d6cb43244a1ca536085dd92431af",
"0a8e6be4bec3466bb658d7d4ff5bc5fd":"FnCall",
"0c1a9537d33148388015163fc90329b3":"MatchList",
"10d9c2de82a14d12bd545133bd4e15f8":"MatchString",
"1104a6a7ec934b48a4f1db64dcd27000":"_label",
"1659fb73179a4fd8abfc99b95d9f5560":"bind",
"1868228966e84ad698de9ff7fe063861":"space",
"18d86dcee79847818139f3dd7dc38d8a":"astSeq",
"19791660815a43e1b775ea6a29349648":"astListItem",
"22163f4ee0fd4e68b2c95f94e111dee1":"dedent",
"229c153579734cffaa700c7e26bcd7f4":"_builder",
"2420b6bcf2374252a533688aa0b33b5f":"astList",
"2508a37fdce84b31a7e6093a98c57506":"BuildCharsec",
"25ec6fc64b8b4a39a9df41daa690386f":"MatchAny",
"26534c61b2d94990abb37ceeeb648e4f":"_ors",
"289a3db9c53e420da4dbdbc94a32aadf":"_vars",
"28ffce2da5724d248fa88ac555d118f8":"asListItemWithNewVars",
"2aa377816ed3486da72cff7bd46190ad":"Grammar",
"2c430882d5af40168a69e1b4b9eb7e0d":"_or",
"2e8a56ad01dc4a289fbd584bc4874e7e":"create",
"301f08856bf54373bc5975f75a315105":"String",
"373f023f0f5f4744a7b309cf9a76d138":"SemanticAction",
"3e7232e282f642ab8ac4fbe709a32a99":"_result",
"41435c2c862f40c1858cd2acd0b4f0bd":"Anonymous",
"42f0b42533be4f7eb54c04f22a137669":"grammar",
"43cd203f934f45c4be5ce3906b60ca5d":"_label",
"4852ced8038c4074a5a8104b8596e0e0":"Apply",
"49ba1aa1e24e408ba2b32bff68a72840":"List",
"49dc22ba19624755a18a13a9e76734b1":"_Builder",
"4c38cde583ac42ea8c7b9295a92e26f2":"_Output",
"4e5409ddd4a34450b3c8b4cb8bc5dd60":"escape",
"4e78a4bc50f744bb959c72b5918d9d32":"no_action",
"50ee7994db484890abbeeb13330e22a7":"_AtomBuilder",
"51046a6353b3472f8fe355d7f481eea9":"_b277e0c5612d4697bf8f8237494f8474",
"53acf505e0ee41de85c674e211ecd39c":"_match_range",
"56c85a8b77424f849f2a1b604066439e":"_or",
"56d10f7bfcfd43bb996c3f76423b067b":"to_rlmeta_output_stream",
"59d465325dd74411b347002179ecda0a":"_last_match",
"5bad22de76f845a68dd802dcb830efcc":"wrapFn",
"5cb361e64daa4aea9637f5b3fd6b91f0":"action",
"60d7dacf2a2b4336b0329665c2026cc0":"Star",
"6230f0917e9f4954add45c5e39a557e0":"sequence",
"630b364d3e7345c098bc8cff819f4d99":"Or",
"63d39eb3401840e681f80ff11203b175":"action",
"63e215a62fb74cebb9c2939e751e326f":"start",
"6544a37a96ce4294ab4553709d89f398":"_RLMeta",
"680e8a08749245bc9bbc232417da1d39":"choice",
"6860db9e40994ebfbe04834b4f12f721":"MatchCharRange",
"6a519019bfac49598dc36620b5b58811":"Bind",
"6b1fe389a7254359b3fbe4cb26ea084e":"nameChar",
"70c457e3514948bcb6c00b67e5a180a2":"_star",
"736cd2768dcd4843b43aca56bea200d3":"MatchNothing",
"739c23d655494bd8a8b9f16e3bd03a52":"wrapInAnd",
"793e09d183c5498fa2587841cd94c126":"char",
"7b75cb86cab34645b43d69d790e6e206":"DedentBuilder",
"7befab3d0c5747d687b20830147a70fa":"nameStart",
"7d667137ca2f4350969bcf2044d677de":"choices",
"7d82aaa0f3d34c059532d7a090654ab7":"string",
"7d8a78dfe90743759bdd25cf45506815":"_IndentBuilder",
"7f941dd526284ccc8143dbbc8ae8df3b":"sequence",
"846fccf81eca4ab48a284407a1647eaa":"_vars",
"85139f1436944deab62958b8a713d8aa":"eval",
"85ee4a0a694641c3aa683a15e6a0ba5d":"astItems",
"87bf33a4869b4d30944c4dd4388631a8":"statement",
"87debc7f453a48eab28b89389b5474a3":"charClass",
"8a8e32dcfa5545f7aa292dd7e696030a":"name",
"8b98e38b093140fc956b35f6cbf5018e":"ast",
"8c4b9e8c90ff4aa08d4840f8c1560522":"_match",
"8cb500cdd43d41a78158c645da945c70":"indent",
"8cf9a10b04cc48a484e1cb7c6f1f2f28":"CodeGenerator",
"8d17eff4871e411793cf0daf3a2ab204":"And",
"8d8408b72eb3446ab5493dad2c80477e":"lower",
"8f0ac7afdb164a6cb5287e9382330e91":"nothing",
"8ff0b4980efa4e349ec5ef14815be6ec":"MatchCharseq",
"91983a8c8ff04389a1c21c67abcebf46":"wrapInFn",
"94dd8ae9174644c2bb5e32d35f601486":"astSeqItem",
"98e8edb80565419e93902ec6ebc5b352":"choice",
"99f12ae30d1a42989f875222b33832ba":"support",
"a304a36f0ab541209c9e8aa78f4edc46":"Parser",
"a4f50e79518843e985eb9545a235ae89":"_Vars",
"a5837c091631449aadeeaa004ae71b0b":"write",
"a5d8a6b567934dd6a53cb34b2a18d30c":"_last_match",
"a864d6cb43244a1ca536085dd92431af":"charseq",
"aa94c870055a417b852e05100fb546c0":"BuildDedent",
"ae2f859206d741eca9f5e10495cb8095":"buildExpr",
"ae823ab23224415f9a539b0354f311b8":"VarLookup",
"af5dbdd6e27c451398b2b116b5ff42d3":"write",
"b09ffc5c602a482982cec2726c306ace":"withNewVars",
"b277e0c5612d4697bf8f8237494f8474":"_ListBuilder",
"b3480703b376431588d58149f19c7a13":"_star",
"b6663a67104042fe8ee0bcb72896f366":"BuildNewline",
"b845c4cee1734619991d56de83dce37d":"Scope",
"bc27a67cb10b4650a32bfe7af84c5060":"Not",
"bd6daaaf4f8a47a1991da45be10921c3":"expr2",
"be57e79c16d8421fad091ec048a56211":"RetStringBuild",
"bfaedafcea7445e7b7ed19c9abb47736":"_DedentBuilder",
"c590c92167d34fe4bfdbb084c03834c1":"_and",
"c8edc6f14d27480e9f737a7697f07f07":"rule",
"c9ecfed5791644a3b7ea2122d4ed87c9":"ListBuilder",
"cbbcd925bc2c42b9add24aaa736f4d35":"_SemanticAction",
"cc14e6fceec9478c8fdb4ac3a58dbf7a":"digit",
"ccb3f676f6314d788147dc603933cd28":"astItem",
"cf8770da147840679077788180e10778":"ListItemSplice",
"d34e449a8ca740d0a4b84921fc05b25f":"IndentBuilder",
"dc3d22a8b70043628b058ffd00659a5d":"BuildIndent",
"dd463f369f79475da606b1cfc2d96076":"hostExpr",
"de5ba4ce4509433c946eacf356d7cfaa":"class:x ",
"de83a3a772234966ac566909fdfb0789":"file",
"dfcaa421bd764cce9d99219c61883a45":"expr",
"e1248cbd01c54a1680793b61e7a048e1":"innerChar",
"e22e419d7c4845389694467bfa395529":"_f49eae10880e4186a37c021e34aea403",
"e22fa3c5d4144197906cbb74af6cc83e":"Rule",
"e521dea02b37474cb05f03e800132aa2":"_last",
"ea57b40b324c4c03b030c78e924ed860":"lookup",
"ec2b7e954fe24f329250bd22c70538e4":"_Vars",
"ee43fa1a15be4277b8bdd277451eb04d":"_and",
"efa7dd37aa9e46908ed34f8d31cd476d":"Or",
"f49eae10880e4186a37c021e34aea403":"_ands",
"f8b8599256e946a08d2325d52bf8e10b":"BuildVar",
"fdd8dd7ed7f54cc487c14cc791d637e2":"wrapInOr",
"fe84c1eea3fc4476bbcb1c717c92d43b":"hostExprListItem",
"ff0229c63d8a4b4897faed8c38201de3":"astFnBody",
"ff9ae871d46e43eca6fe9d752dfb7afc":"pexpr"
}
}