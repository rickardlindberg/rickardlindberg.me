{
"root_page":{
"children":[],
"id":"f3a0eb1238eb44b4a57c4c3113d3380a",
"paragraphs":[
{
"fragments":[
{
"text":"When working on porting ",
"type":"text"
},
{
"text":"Timeline",
"type":"link",
"url":"/projects/timeline/index.html"
},
{
"text":" to Python 3, I ran into a problem where a test caused a segfault. I managed to create a small example that reproduces the failure. I describe the example below and show how I solved the test failure.",
"type":"text"
}
],
"id":"6557bec1f8f141c3bba2fb5ae5a89722",
"type":"text"
},
{
"fragments":[
{
"text":"The example consists of a test that stores an instance of a custom wx event in a ",
"type":"text"
},
{
"text":"mock",
"type":"link",
"url":"https://docs.python.org/3.5/library/unittest.mock.html#the-mock-class"
},
{
"text":" object:",
"type":"text"
}
],
"id":"cb0eee47a3a8488e94332fbdd460dfa3",
"type":"text"
},
{
"chunkpath":[],
"filepath":[
"test_wx.py"
],
"fragments":[
{
"text":"from unittest.mock import Mock\nimport unittest\n\nimport wx\nimport wx.lib.newevent\n\nCustomEvent, EVT_CUSTOM = wx.lib.newevent.NewEvent()\n\nclass WxTest(unittest.TestCase):\n\n    def test_wx(self):\n        mock = Mock()\n        mock.PostEvent(CustomEvent())\n\nif __name__ == \"__main__\":\n    unittest.main()\n",
"type":"code"
}
],
"id":"4cb7160d0f38482bae856cfd29ae0dc9",
"type":"code"
},
{
"fragments":[
{
"text":"When I run this example, I get the following error:",
"type":"text"
}
],
"id":"2d19cfd36d8347ad969c8c4a2d5527de",
"type":"text"
},
{
"chunkpath":[],
"filepath":[],
"fragments":[
{
"text":"$ python3 test_wx.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\nSegmentation fault (core dumped)\n",
"type":"code"
}
],
"id":"265722fd366e4e3cb64116ed1af8bf0c",
"type":"code"
},
{
"fragments":[
{
"text":"If I instead run it through gdb, I can see the C stacktrace where the error happens:",
"type":"text"
}
],
"id":"e0244141dc1c4a6795d8cdf7c8997fa2",
"type":"text"
},
{
"chunkpath":[],
"filepath":[],
"fragments":[
{
"text":"$ gdb python3\nGNU gdb (GDB) Fedora 8.2.91.20190401-23.fc30\n...\n(gdb) run test_wx.py \n...\n.\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nOK\n\nProgram received signal SIGSEGV, Segmentation fault.\ndict_dealloc (mp=0x7fffe712f9d8) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/dictobject.c:1901\n1901\t/usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/dictobject.c: No such file or directory.\nMissing separate debuginfos, use: dnf debuginfo-install fontconfig-2.13.1-6.fc30.x86_64 libXcursor-1.1.15-5.fc30.x86_64 libgcrypt-1.8.4-3.fc30.x86_64 libxkbcommon-0.8.3-1.fc30.x86_64 lz4-libs-1.8.3-2.fc30.x86_64 python3-sip-4.19.17-1.fc30.x86_64\n(gdb) bt\n#0  dict_dealloc (mp=0x7fffe712f9d8) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/dictobject.c:1901\n#1  0x00007fffea02e1cc in wxPyEvtDict::~wxPyEvtDict (this=0x5555556f3ee8, __in_chrg=<optimized out>) at ../../../../src/pyevent.h:48\n#2  wxPyEvent::~wxPyEvent (this=0x5555556f3e90, __in_chrg=<optimized out>) at ../../../../src/pyevent.h:96\n#3  sipwxPyEvent::~sipwxPyEvent (this=0x5555556f3e90, __in_chrg=<optimized out>) at ../../../../sip/cpp/sip_corewxPyEvent.cpp:56\n#4  0x00007fffea02e24d in sipwxPyEvent::~sipwxPyEvent (this=0x5555556f3e90, __in_chrg=<optimized out>) at ../../../../sip/cpp/sip_corewxPyEvent.cpp:56\n#5  0x00007fffea02dfd2 in release_wxPyEvent (sipCppV=0x5555556f3e90, sipState=<optimized out>) at ../../../../sip/cpp/sip_corewxPyEvent.cpp:261\n#6  0x00007fffe72ff4ce in ?? () from /usr/lib64/python3.7/site-packages/sip.so\n#7  0x00007fffe72ff51d in ?? () from /usr/lib64/python3.7/site-packages/sip.so\n#8  0x00007ffff7c14869 in subtype_dealloc (self=<_Event at remote 0x7fffea4ddd38>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/typeobject.c:1256\n#9  0x00007ffff7b8892b in tupledealloc (op=0x7fffe712cda0) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/tupleobject.c:246\n#10 0x00007ffff7b8892b in tupledealloc (op=0x7fffea4d7620) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/tupleobject.c:246\n#11 0x00007ffff7c14869 in subtype_dealloc (self=<_Call at remote 0x7fffea4d7620>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/typeobject.c:1256\n#12 0x00007ffff7b882ae in list_dealloc (op=0x7fffe70ba228) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/listobject.c:324\n#13 0x00007ffff7c14869 in subtype_dealloc (self=<_CallList at remote 0x7fffe70ba228>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/typeobject.c:1256\n#14 0x00007ffff7b8c813 in free_keys_object (keys=0x555555855080) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/gcmodule.c:776\n#15 dict_dealloc (mp=0x7fffe712f630) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/dictobject.c:1913\n#16 subtype_clear (self=<optimized out>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Objects/typeobject.c:1101\n#17 delete_garbage (old=<optimized out>, collectable=<optimized out>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/gcmodule.c:769\n#18 collect (generation=2, n_collected=0x7fffffffd230, n_uncollectable=0x7fffffffd228, nofail=0) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/gcmodule.c:924\n#19 0x00007ffff7c4ac4e in collect_with_callback (generation=generation@entry=2) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/gcmodule.c:1036\n#20 0x00007ffff7ca7331 in PyGC_Collect () at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/gcmodule.c:1581\n#21 0x00007ffff7caaf03 in Py_FinalizeEx () at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Python/pylifecycle.c:1185\n#22 0x00007ffff7cab048 in Py_Exit (sts=sts@entry=0) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Python/pylifecycle.c:2278\n#23 0x00007ffff7cab0ff in handle_system_exit () at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Python/pythonrun.c:636\n#24 0x00007ffff7cab1e6 in PyErr_PrintEx (set_sys_last_vars=1) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Python/pythonrun.c:646\n#25 0x00007ffff7cab651 in PyRun_SimpleFileExFlags (fp=<optimized out>, filename=<optimized out>, closeit=<optimized out>, flags=0x7fffffffd410) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Python/pythonrun.c:435\n#26 0x00007ffff7cad864 in pymain_run_file (p_cf=0x7fffffffd410, filename=<optimized out>, fp=0x5555555a20d0) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/main.c:427\n#27 pymain_run_filename (cf=0x7fffffffd410, pymain=0x7fffffffd520) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/main.c:1627\n#28 pymain_run_python (pymain=0x7fffffffd520) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/main.c:2877\n#29 pymain_main (pymain=0x7fffffffd520) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/main.c:3038\n#30 0x00007ffff7cadc0c in _Py_UnixMain (argc=<optimized out>, argv=<optimized out>) at /usr/src/debug/python3-3.7.3-1.fc30.x86_64/Modules/main.c:3073\n#31 0x00007ffff7e12f33 in __libc_start_main (main=0x555555555050 <main>, argc=2, argv=0x7fffffffd678, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffd668) at ../csu/libc-start.c:308\n#32 0x000055555555508e in _start ()\n",
"type":"code"
}
],
"id":"e1f5950969774cb0b4e391af837f0d74",
"language":"",
"type":"code"
},
{
"fragments":[
{
"text":"Somewhere in the middle, there is a call to ",
"type":"text"
},
{
"text":"PyGC_Collect",
"type":"code"
},
{
"text":" followed, a bit higher up, by a call to ",
"type":"text"
},
{
"text":"release_wxPyEvent",
"type":"code"
},
{
"text":". This indicates that the error occurs during garbage collection of the custom wx event.",
"type":"text"
}
],
"id":"36957fc2f2054387a8959d0f405ed0ff",
"type":"text"
},
{
"fragments":[
{
"text":"The machine I run the example on is running Python 3.7.3, and wxPython 4.0.4:",
"type":"text"
}
],
"id":"877fd602793e4e7d883ec582f627e87d",
"type":"text"
},
{
"chunkpath":[],
"filepath":[],
"fragments":[
{
"text":"$ python3\nPython 3.7.3 (default, Mar 27 2019, 13:36:35)\n[GCC 9.0.1 20190227 (Red Hat 9.0.1-0.8)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import wx\n>>> wx.version()\n'4.0.4 gtk3 (phoenix) wxWidgets 3.0.4'\n",
"type":"code"
}
],
"id":"affb85e4d19444bc9ea45010206a3d3e",
"type":"code"
},
{
"fragments":[
{
"text":"To solve this problem, I replaced the mock function ",
"type":"text"
},
{
"text":"PostEvent",
"type":"code"
},
{
"text":" with one that simply discards its input like this:",
"type":"text"
}
],
"id":"5a95f45555d345dca9023212ea145f90",
"type":"text"
},
{
"chunkpath":[],
"filepath":[],
"fragments":[
{
"text":"mock.PostEvent = lambda x: None\n",
"type":"code"
}
],
"id":"e8dc877d13a9484dbc7c734cba6dfb5b",
"language":"python",
"type":"code"
},
{
"fragments":[
{
"text":"This way there is no custom wx event to garbage collect. In Timeline's case, it was not important to store the event in the mock object anyway.",
"type":"text"
}
],
"id":"8950dc872a564b80a0f4c59d7241dee9",
"type":"text"
},
{
"fragments":[
{
"text":"If you have any idea why this example causes a segfault, I would be interested to know. It feels like an error in the wxPython wrapper.",
"type":"text"
}
],
"id":"4ee00e656d0d4f59a8dbd9cc2afdbad1",
"type":"text"
}
],
"title":"Segfault with custom events in wxPython"
},
"variables":{}
}