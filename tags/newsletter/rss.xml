<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Rickard's personal homepage: latest posts tagged newsletter</title>
        <link>http://rickardlindberg.me</link>
        <description><![CDATA[Rickard's personal homepage: latest posts tagged newsletter]]></description>
        <atom:link href="http://rickardlindberg.me/tags/newsletter/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Sat, 02 Apr 2022 00:00:00 UT</lastBuildDate>
        <item>
    <title>March 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/march-2022/</link>
    <description><![CDATA[<h1>March 2022 Update</h1>

<p><em>Published on  2 April 2022.</em></p>

<p>This is what I’ve been up to in March 2022:</p>
<ul>
<li><p>I started prototyping <a href="https://github.com/rickardlindberg/rlci/">RLCI</a> which is an experimental CI/CD system designed to solve problems I’ve had with Jenkins. I made some videos about it too.</p></li>
<li><p>I published another four programming videos on my Youtube channel:</p>
<ul>
<li><a href="https://youtu.be/pZwjYknDxYo">Sharing thoughts about a new CI system that solves problems I’ve had with Jenkins.</a></li>
<li><a href="https://youtu.be/-iSgZkqlUVw">Thinking about representations for CI pipelines.</a></li>
<li><a href="https://youtu.be/oPX8bBTNBMI">Demoing prototype of CI/CD system.</a></li>
<li><a href="https://youtu.be/RHy-oryo5rI">How can a worker node execute code on behalf of a CI/CD server?</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sat, 02 Apr 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/march-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>February 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/february-2022/</link>
    <description><![CDATA[<h1>February 2022 Update</h1>

<p><em>Published on  2 March 2022.</em></p>

<p>This is what I’ve been up to in February 2022:</p>
<ul>
<li><p>I finished the blog post about the new version of <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a>.</p></li>
<li><p>I published another four programming videos on my Youtube channel:</p>
<ul>
<li><a href="https://youtu.be/stBGg7v-URg">How I got consumed by a programming problem and recovered.</a></li>
<li><a href="https://youtu.be/ACTO7AfB_zQ">Adding LISP-style function calls to RLMeta.</a></li>
<li><a href="https://youtu.be/riJUqBPx1uU">Solving Advent of Code 2021 Day 14 using Python without any libraries.</a></li>
<li><a href="https://youtu.be/84IUZVyFrh8">Demoing new image export dialog in Timeline version 2.6.0.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Wed, 02 Mar 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/february-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>January 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/january-2022/</link>
    <description><![CDATA[<h1>January 2022 Update</h1>

<p><em>Published on  4 February 2022.</em></p>

<p>This is what I’ve been up to in January 2022:</p>
<ul>
<li><p>I did more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. I took some larger time blocks to work on it, and I can now finally see it being finished next month.</p></li>
<li><p>I decided to set up a <a href="https://github.com/rickardlindberg/rlmeta">repo on GitHub</a> for RLMeta where it can continue to be improved. I plan for it to contain the base version of RLMeta which is the minimal version that is able to compile itself and maintain properties such as flexible, easy to extend, and easy to understand. Then I want to include examples as well to show how RLMeta can be used and how you can extend it in various ways.</p></li>
<li><p>I started publishing weekly programming videos on Youtube. My goal for 2022 is to make one programming related video each week. I’m currently in the process of finding a good format or formats, and I am experimenting a lot. This month I made the following videos:</p>
<ul>
<li><a href="https://youtu.be/NsVERD6Xvvw">I’m starting weekly programming videos on Youtube.</a></li>
<li><a href="https://youtu.be/6lqdJvSuZpk">How a Python programmer extracts timelapses from camera SD card.</a></li>
<li><a href="https://youtu.be/aT2XbyMv53E">Writing a decoder for the “Quite OK Image Format” (QOI) in 55 lines of RLMeta.</a></li>
<li><a href="https://youtu.be/V3oUnhyCSkY">Rewriting QOI decoder semantic action in Python for clarity and speed.</a></li>
</ul></li>
<li><p>I got an urge to write a projectional editor to learn more about projectional editing. It’s something I’ve been thinking about before and have tried to incorporate a bit in <a href="/projects/rliterate/index.html">RLiterate</a>.</p></li>
<li><p>I watched <a href="https://youtu.be/dP1xVpMPn8M">A Tour of the Acme Editor</a> by Russ Cox. Acme felt like a different and unique text editor with an interesting approach.</p></li>
<li><p>I did some work to update my <a href="https://github.com/rickardlindberg/dotfiles/">dotfiles</a>. Mainly to simplify and add support for different setups. When I am recording videos for Youtube, for example, I want to have bigger font size in various applications. With my new dotfiles, I can now quickly switch between different setups.</p></li>
</ul>
]]></description>
    <pubDate>Fri, 04 Feb 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/january-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>December 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/december-2021/</link>
    <description><![CDATA[<h1>December 2021 Update</h1>

<p><em>Published on  4 January 2022.</em></p>

<p>This is what I’ve been up to in December 2021:</p>
<ul>
<li><p>I did more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. I wrote for quite many days, but not for a very long time each day. I believe consistency works better. After each small edit, I published the draft. I will continue writing in January.</p></li>
<li><p>After quite a long absence, I made a contribution to <a href="/projects/timeline/index.html">Timeline</a> again. The contribution was to replace all image export dialogs with a better, more flexible one. I got inspired to work on this because of a problem that a user expressed on the mailing list. The new dialog will hopefully make the user experience a bit better and it simplified the code base. After the initial version, I had to make tweaks to make it work good on both Linux and Windows. Even though wxPython is cross-platform, you can still run into issues that are platform specific.</p></li>
<li><p>I started planning and recording a series of programming videos that I will publish on Youtube. My goal for 2022 is to publish one video every week. More on that in the first video, which I have planned for 7th of January.</p></li>
<li><p>I watched <a href="https://youtu.be/GgsRQuGSrc0">Building an encoder for the “Quite OK Image Format” (QOI)</a>. It inspired me to try and write a QOI decoder in RLMeta. I plan to make a video about that.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 04 Jan 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/december-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>November 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/november-2021/</link>
    <description><![CDATA[<h1>November 2021 Update</h1>

<p><em>Published on  2 December 2021.</em></p>

<p>This is what I’ve been up to in November 2021:</p>
<ul>
<li><p>I managed to do a little more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. Not as much as I had hoped, but I plan to continue working on it in December.</p></li>
<li><p>Since I started getting interested in cameras and making videos, my spare time, and perhaps also interest, for programming has decreased. It is still a big interest of mine, so I don’t think it has gone away. I have mostly made videos for myself, but perhaps I can combine my two interests and make programming videos of some sort.</p></li>
<li><p>I got an email from someone with a question about my article on <a href="/writing/expr-to-x86-compiler/index.html">compiling expressions to x86 machine code</a>. I don’t often get any feedback on my blog posts, but whenever I do, I get happy because then it feels like someone appreciated what I did.</p></li>
</ul>
]]></description>
    <pubDate>Thu, 02 Dec 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/november-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>October 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/october-2021/</link>
    <description><![CDATA[<h1>October 2021 Update</h1>

<p><em>Published on  4 November 2021.</em></p>

<p>This is what I’ve been up to in October 2021:</p>
<ul>
<li><p>I set up some infrastructure for writing the blog post about <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a>. Now I can automatically generate the post with up to date code examples and syntax highlighting. I didn’t make much progress on the writing itself. Hopefully I can make more progress on that in November.</p></li>
<li><p>I got an email from a person that was interested in old project of mine: <a href="https://github.com/frp-arduino/frp-arduino">frp-arduino</a>. It was nice to see that something I’ve put into the world sparked an interest in someone else.</p></li>
<li><p>I read a <a href="https://twitter.com/seanmcdirmid18/status/1448500893331058692">tweet</a> by Sean McDirmid about incremental parsing. I asked him if his approach was similar to the one used in <a href="https://ohmlang.github.io/pubs/sle2017/incremental-packrat-parsing.pdf">Ohm</a> (a paper which he also reviewed), but it was different. The approach used in Ohm could probably be more easily implemented in RLMeta.</p></li>
<li><p>Besides programming I spend much time learning more about cameras and videography. This homepage is mostly dedicated to my interest for programming, so I’m not sure how much I want to write about camera related stuff.</p></li>
</ul>
]]></description>
    <pubDate>Thu, 04 Nov 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/october-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>September 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/september-2021/</link>
    <description><![CDATA[<h1>September 2021 Update</h1>

<p><em>Published on  9 October 2021.</em></p>

<p>This is what I’ve been up to in September 2021:</p>
<ul>
<li><p>I created a short movie about what programming is like for me. You can watch it <a href="https://youtu.be/jYvMbSTvns8">here</a> and read about my behind the scenes thoughts <a href="/writing/what-is-programming/index.html">here</a>. I mainly did it to explore movie making.</p></li>
<li><p>I continued to work on RLMeta. Specifically on the <a href="/writing/rlmeta-poster-2/index.html">second poster version</a>.</p>
<ul>
<li><p>At first my plan was to make a second poster with an improved version of RLMeta. The goal would be to showcase an even more beautiful implementation.</p></li>
<li><p>However, the idea of a second poster was putting too much pressure on me. If I did a second poster, I would want it to be perfect. And I never seemed to get there. I was able to improve many things in RLMeta, but somehow imperfections always kept creeping in.</p></li>
<li><p>So to relief the pressure of making a more polished poster, I decided to instead write a blog post about this new version in a “code walkthrough” style. That blog post could be the start of a README for a dedicated project repo for RLMeta. At some time I would have to publish the blog post, so that is a bit of a pressure, but I can more easily tweak it closer to publishing time because generating a new blog post is an automatic process whereas creating a poster from source code is a manuall process (that requires manual layout decisions). The blog post will be another way to showcase RLMeta.</p></li>
</ul></li>
<li><p>I read about <a href="https://handmade.network/manifesto">Handmade</a>. I was inspired by the idea to implement more things “by hand” and not layer abstraction on abstraction that creates a slow mess. I though about designing programming systems where you could more easily implement things at a lower level to avoid creating lots of abstractions when not needed.</p></li>
<li><p>I created a dedicated notebook for project ideas that I have. I have more ideas than I have time to work on. I think I need to focus on one project at a time to make progress.</p></li>
<li><p>I thought about how to make hobby programming a habit. My hobby projects are things I want to make progress on, but on the other hand, they should be fun. They are hobby projects right? But even hobby projects are not interesting all the time. Sometimes you just have to push through.</p></li>
</ul>
]]></description>
    <pubDate>Sat, 09 Oct 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/september-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>August 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/august-2021/</link>
    <description><![CDATA[<h1>August 2021 Update</h1>

<p><em>Published on  7 September 2021.</em></p>

<p>This is what I’ve been up to in August 2021:</p>
<ul>
<li><p>I continued with the draft post <a href="/writing/rlmeta-poster-2/index.html">RLMeta poster 2</a>.</p>
<ul>
<li><p>I had some ideas of things I wanted to improve in the next version of RLMeta. But mainly, I just wanted to work on it again because I think it is a fun piece of software to work on.</p></li>
<li><p>Before I could continue to improve RLMeta, I first had to port it to Python 3 because my new laptop now runs Python 3. The port was rather small.</p></li>
<li><p>I then continued with various improvements that I plan to document in the blog post.</p></li>
<li><p>I’m not sure that the final product of the blog post is going to be a poster. Right now I’m thinking it should be some kind of interactive, live, demo that you can play with in your browser that illustrates, somewhat similar to the poster, how RLMeta works. That would also require a port of RLMeta to Javascript, which should be fun.</p></li>
<li><p>I find it difficult to know when to stop improving RLMeta. Sometimes I feel like I chase perfection. In every iteration, I get closer, but there seems to always be something left that annoys me.</p></li>
<li><p>My next big goal with RLMeta is to make it not depend on Python. In order for that to happen, I need to implement a subset of the Python language that RLMeta uses. All the way down to machine code. So it is a quite big project, but should be fun.</p></li>
</ul></li>
<li><p>I thought about where it makes sense to put CI/CD code. The most common place to put it in (that I’ve seen) is in the repository itself. But I feel like that is not the most logical place. Information about how to use a project in a CI/CD chain should not be coupled with the project itself. I feel like build scripts belong in the repository because how to build a piece of software feels related to the project itself. But in CI/CD, you often deal with larger aspects than the project in isolation. For example, in a CI/CD chain you might want to send email notifications upon build failure. That is not related to the project. It is related to how you implement CI/CD. So I’m thinking that a CI/CD system should be programmed separately from the project repos.</p></li>
<li><p>I got inspired by <a href="https://www.youtube.com/watch?v=bpbYyF-FBqU">this video</a> by Van Neistat about a tool he can’t live well without: the pencil. I could relate to that as I also feel that the pencil is “the pump that brings up the ideas from the well”, so I decided to buy a T-shirt:</p>
<center>
<p><img src="pencil.jpg"></p>
</center></li>
</ul>
]]></description>
    <pubDate>Tue, 07 Sep 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/august-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>July 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/july-2021/</link>
    <description><![CDATA[<h1>July 2021 Update</h1>

<p><em>Published on  3 August 2021.</em></p>

<p>This is what I’ve been up to in July 2021:</p>
<ul>
<li><p>I cleaned up the rlselect repo and recorded a new demo gif. You can see it at the <a href="/projects/rlselect/index.html">project page</a>. I did not improve the literate document because I had no incentive to do so. The application does what I want it to do, and from a maintenance point of view, I can continue to improve it with smart notes literate programming support. But as long as there is nothing I want to improve in the application, I think I will leave it like this. I know the application does some trick with stdin/stdout that might be interesting to write a blog post about. If I decide to do that, I might start by explaining the trick inside the literate document, and then write the blog post.</p></li>
<li><p>I felt the urge to work on a Timeline canvas component. That is, only the timeline widget in <a href="/projects/timeline/index.html">Timeline</a>. It’s been a long time since I first started the project, and I would probably do some things differently today. An isolated component could also be useful for other projects.</p></li>
<li><p>I revisited RLMeta and wanted to work more on it. I have some ideas of what to work on next. We will see.</p></li>
<li><p>I decided to skip doing a video version of this update, and probably future updates as well. I don’t think the updates were a good fit for video. These updates are useful for me because I like to go back and get a quick overview of what I was doing. A bullet list works perfect for that. A non searchable video does not. I might record only demos if I have any and link them in the update. We will see. I still enjoy making videos.</p></li>
<li><p>I shot daily vlogs (not published online) during two weeks of my vacation, and that is something I enjoyed to do. So I got to practice shooting, editing, story telling, etc. I also watched much Casey Neistat and Peter Lindgren for inspiration.</p></li>
<li><p>I watched “The Social Dilemma” and though about how I missed when the internet was just a bunch of personal homepages not controlled by a few companies.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 03 Aug 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/july-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>Dogfooding Literate Programming Support in Smart Notes (June 2021 Update)</title>
    <link>http://rickardlindberg.me/writing/newsletter/june-2021/</link>
    <description><![CDATA[<h1>Dogfooding Literate Programming Support in Smart Notes (June 2021 Update)</h1>

<p><em>Published on  4 July 2021.</em></p>

<p>This is what I’ve been up to in June 2021.</p>
<p>
<center>
<iframe width="560" height="315" src="https://www.youtube.com/embed/yhMm1q3Na1Q" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
</center>
</p>
<h2 id="laptop-upgrade">Laptop Upgrade</h2>
<p>I switched my main laptop and also upgraded it to use the latest version of Fedora.</p>
<p>That led me to revisited and tweak my <a href="https://github.com/rickardlindberg/dotfiles/">dotfiles</a> for the new setup.</p>
<p>One tool that I rely on heavily is <a href="/projects/rlselect/index.html">rlselect</a>, and it only works with Python 2. The new version of Fedora doesn’t ship Python 2 with all the libraries that rlselect needs. And Python 2 is deprecated anyway. That gave me the urge to port rlselect to Python 3. But I also wanted to write the port using a literate programming tool. I had previously thought about trying to use <a href="https://github.com/rickardlindberg/smartnotes">Smart Notes</a> as a literate programming tool, but it lacked support now.</p>
<h2 id="literate-programming-support-in-smart-notes">Literate Programming Support in Smart Notes</h2>
<p>Because of my laptop upgrade, I had a new top priority for Smart Notes: implement some kind of literate programming support.</p>
<p>I started by adding a script to convert <a href="/projects/rliterate/index.html">RLiterate</a> (my previous attempt at a literate programming tool) documents to Smart Notes documents. That way I could convert my projects that use RLiterate to Smart Notes so that I could continue editing them from within Smart Notes.</p>
<p>I converted the Smart Notes RLiterate document to a Smart Notes document. Smart Notes was now written in itself. But there was no way to edit the code notes created by the convert script from within Smart Notes. The only way to edit the code was by editing the generated files. But if I did that, the code in the Smart Notes document and the generated files would be out of sync. So I decided to write a script that would examine changes in the external files and merge them back into the Smart Notes document. I got the idea that this was possible by reading about a similar approach used in <a href="https://leoeditor.com/appendices.html#the-mulder-ream-update-algorithm">Leo</a>.</p>
<p>I got the merge script working well enough. I was able to edit <code>smartnotes.py</code> and merge the changes back into <code>smartnotes.notes</code>. So that when <code>smartnotes.py</code> was generated from <code>smartnotes.notes</code> it would include the changes.</p>
<p>I used this workflow to add support to Smart Notes to create and edit code notes. At this point I was no longer in need of the merge script. I could do all the editing from within Smart Notes. However, as I talked about in the <a href="/writing/newsletter/may-2021/index.html">previous update</a>, such a merge script would be crucial for working with others not using Smart Notes. And I believe it will also come in handy to make editing external files from within Smart Notes more convenient. For example, it would allow a whole class to be edited even though that class is split into multiple code notes. When the whole class is saved, the merge script will merge changes back into the corresponding code notes.</p>
<h2 id="port-of-rlselect-to-python-3">Port of rlselect to Python 3</h2>
<p>At this point I could use Smart Notes as a literate programming tool to create a new version of rlselect that worked with Python 3.</p>
<p>I started by importing all the existing code into a new Smart Notes document. I did that by creating a minimal set of code notes. At this point, the code notes were large and didn’t really benefit from the literate approach.</p>
<p>Then I started making changes to make rlselect work with Python 3 and got it working quite easily.</p>
<p>The next step was to split the code notes into smaller chunks to be able to annotate and document smaller portions of the code. For that, Smart Notes needed some additional features. At least to make the process convenient.</p>
<h2 id="literate-programming-improvements">Literate Programming Improvements</h2>
<p>I added support in Smart Notes for splitting code notes and tried it on the Smart Notes document itself. I didn’t have time to use this feature to improve the rlselect document, but I plan to.</p>
<p>I also added virtual links so that code notes that are related are automatically linked.</p>
<p>This process of <a href="https://en.wikipedia.org/wiki/Eating_your_own_dog_food">dogfooding</a> is really useful and fun. It answers the question very clearly what to work on next.</p>
<h2 id="demo">Demo</h2>
<p>To see a demo of the literate programming features in Smart Notes, have a look at <a href="https://youtu.be/yhMm1q3Na1Q?t=314">5:14</a>.</p>
<h2 id="reflections-on-literate-programming">Reflections on Literate Programming</h2>
<p>I thought about how the literate programming in Smart Notes feels different from the literate programming in RLiterate. In Smart Notes you don’t create a single linear document. You connect pieces of information that are related to each other. It will therefore also be difficult to extract a single linear document from Smart Notes. So this kind of literate programming will not result in “a book” that is the whole application with source code explained. It will rather be annotated source code. Linear documents might help with understanding sometimes. So I’m not quite sure how it fits into the Smart Notes literate programming approach. One possibility is to generate documentation files using regular code notes. For example, a <code>README.md</code> could be generated by assembling code notes from Smart Notes. But that <code>README.md</code> would not contain the whole program with documentation. Just a small part. Perhaps that is ok. By using Smart Notes as my main literate programming tool, I will experiment and see what it feels like.</p>
<p>I am really happy with the progress I made on the literate programming support in Smart Notes. The script to convert RLiterate documents to Smart Notes documents and the script to merge changes from external files back into Smart Notes documents were killer features that allowed me to progress very fast.</p>
<h2 id="videography">Videography</h2>
<p>Aside from programming, I also continued to learn about my new hobby of videography:</p>
<ul>
<li><p>I learned more about how to properly use my camera when it comes to white balance and exposure. I also ordered white balance cards to help me with that.</p></li>
<li><p>I tried to figure out how to use different frame rates and shutter speeds to eliminate flicker from light sources. I found a good tool from RED to list good combinations: <a href="https://www.red.com/flicker-free-video">flicker free video</a>. I don’t fully understand the logic behind it, but at least I can now get rid of some flicker in practice.</p></li>
<li><p>I tested what happens to sound clips when cut in Kdenlive vs. in Ardour. Ardour adds short fade ins and fade outs, but Kdenlive doesn’t. So probably cuts in Kdenlive can create unwanted sounds if they don’t match up.</p></li>
<li><p>I thought that my Rode Vide Mic NTG sounded noisy. I tried a firmware update, but it didn’t help. I tried various methods of recording, and all the results were similar. Perhaps I just need to be closer to the microphone so that the main audio is much louder than the background noise. The other option would be to reduce background noise in post.</p></li>
</ul>
<h2 id="reflections-on-last-year">Reflections on Last Year</h2>
<p>This time <a href="/writing/newsletter/june-2020/index.html">last year</a> I was working on projectional editing support for RLiterate. I am no longer convinced that projectional editing is a good idea. It might just be that I am very comfortable with my current tools (Vim + command line tools) that I feel frustrated when I can’t use them. Or it might be that I haven’t used any good enough projectional editing system. My focus has at least shifted to build tools that are more practical and comfortable for <em>me</em> to use.</p>
<p>This time last year I also read about compilers. It is a topic that I am still interested in, and I hope to work more and write more about compiler related stuff in the future.</p>
]]></description>
    <pubDate>Sun, 04 Jul 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/june-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>May 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/may-2021/</link>
    <description><![CDATA[<h1>May 2021 Update</h1>

<p><em>Published on  6 June 2021.</em></p>

<p>
<center>
<iframe width="560" height="315" src="https://www.youtube.com/embed/cMqtkyMyr-w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
</iframe>
</center>
</p>
<p>This is what I’ve been up to in May 2021:</p>
<ul>
<li><p>I published a new video where I hack on Smart Notes: <a href="https://youtu.be/95l_XFtx-JQ">Smart Notes Hacking Session #13: Improve Search Bar Test</a>.</p></li>
<li><p>A consequence of trying to record hacking videos was that I ended up not doing any programming because I felt the barrier was too big. I felt pressure to record interesting sessions so instead I put it off and did no programming at all.</p></li>
<li><p>I still think video is an interesting format. So instead of more hacking sessions, this month, I tried to make a video version of this update where I also show what I’ve been working on. Let me know what you think.</p></li>
<li><p>I actually did program on Smart Notes, and the first version of the table view is now working. (<a href="https://youtu.be/cMqtkyMyr-w?t=68">Demo at 1:08</a>)</p></li>
<li><p>I had a few ideas for new features for Smart Notes:</p>
<ul>
<li><p>The possibility to pin notes so that they are easily accessible and linkable when navigating to other notes. (<a href="https://youtu.be/cMqtkyMyr-w?t=206">Explanation at 3:26</a>)</p></li>
<li><p>The possibility to go to a random note for leisure browsing. It might remind you of interesting things that you wouldn’t have otherwise looked at.</p></li>
<li><p>Add support for some kind of literate programming. I read (<a href="https://twitter.com/mpeytonjones/status/1379500747751092226">here</a>, <a href="https://twitter.com/khinsen/status/1379762605837983746">here</a>, and <a href="https://twitter.com/rob_rix/status/1379593489344819204">here</a>) about the idea that literate programming has focused more on a pedagogical presentation order and that that style is in conflict with what maintainers of software need. So I am thinking along the lines of having Smart Notes annotate code in some way. The focus should not be on a linear presentation style (as in <a href="/projects/rliterate/index.html">RLiterate</a>) that has to be carefully maintaned, but rather on annotating code and making useful connections. Imagine that every unit of a code base (function, class, etc) is represented as a note, and that there are links between notes to represent execution paths or related code. When working on a specific problem, you can gather the notes (parts of the code) that needs changing and you have all in one place. Another crucial feature to support maintainers (and working with others) is that it should be possible to edit code “as usual” without the need to use a literate programming tool. (<a href="https://youtu.be/cMqtkyMyr-w?t=310">Explanation at 5:10</a>)</p></li>
</ul></li>
<li><p>I learned more about video editing.</p>
<ul>
<li><p>I bought a new camera, a Sony A6400 with a Sigma lens, that I’ve been playing around with.</p></li>
<li><p>I learned about concepts such as exposure, shadows, midtones, highlights, RGB parade, white balance, and color correction through <a href="https://www.youtube.com/watch?v=Sy3ROPPRGXQ">numerous</a> <a href="https://www.youtube.com/watch?v=Gz_QzBdHDYc">videos</a> <a href="https://www.youtube.com/watch?v=w98TAEcNNLw">on</a> <a href="https://www.youtube.com/watch?v=B29lwatn9hs">You</a> <a href="https://www.youtube.com/watch?v=Rfx7wfFVO-E">Tube</a>.</p></li>
<li><p>I switched video editor to <a href="https://kdenlive.org/">Kdenlive</a> from <a href="https://shotcut.org/">Shotcut</a> that I was using before. Compared to Shotcut, it feels more professional and intuitive for me to use.</p></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sun, 06 Jun 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/may-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>Newsletter April 2021</title>
    <link>http://rickardlindberg.me/writing/newsletter/april-2021/</link>
    <description><![CDATA[<h1>Newsletter April 2021</h1>

<p><em>Published on  4 May 2021.</em></p>

<p>This is what I’ve been up to in April 2021:</p>
<ul>
<li><p>I published 3 new videos where I hack on Smart Notes:</p>
<ul>
<li><a href="https://youtu.be/v0a904NB7Sc">Smart Notes Hacking Session #10: End-To-End Test Framework Embryo</a></li>
<li><a href="https://youtu.be/nIfk5zxGyB0">Smart Notes Hacking Session #11: Test Clean Up</a></li>
<li><a href="https://youtu.be/ryBlkGUJBz8">Smart Notes Hacking Session #12: Search Bar End-To-End Test</a></li>
</ul></li>
<li><p>I recorded many more sessions that I have not yet published. So I am a bit behind on the editing process.</p></li>
<li><p>I thought about different formats for the hacking sessions. Currently I do a bit of preparation off camera, then record one session, then repeat. So all changes to Smart Notes are recorded, but not my whole thinking process. I though about still doing the same recordings but editing them into more polished videos that might cover one topic or feature instead of just being time boxed. I think the verbatim hacking sessions might be more appropriate for live streams. I don’t know. If you have any feedback on this, please let me know.</p></li>
<li><p>I researched and ordered a camera (Sony A6400) and a microphone (Rode VideoMic NTG) so that I can hopefully produce videos of higher quality. I will experiment with it in the next month.</p></li>
<li><p>I watched <a href="https://youtu.be/5h8bo9OxCwI">Interview with JT: Andreas Kling of SerenityOS</a>. One interesting idea that I got from the interview was that open source projects might benefit from providing source code only, and no binary packages. Some people might not use the software at all then, but the ones that do are more likely to contribute changes because the friction to do so is much less once you have build from source.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 04 May 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/april-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>Newsletter March 2021</title>
    <link>http://rickardlindberg.me/writing/newsletter/march-2021/</link>
    <description><![CDATA[<h1>Newsletter March 2021</h1>

<p><em>Published on  4 April 2021.</em></p>

<p>This is what I’ve been up to in March 2021:</p>
<ul>
<li><p>I recorded and published 7 videos where I hack on Smart Notes:</p>
<ul>
<li><a href="https://youtu.be/Qsho_NbXj2M">Smart Notes Table Feature Session 2: Event Bubbling</a></li>
<li><a href="https://youtu.be/YdSgqCDQo8U">Smart Notes Table Feature Session 3: Parent</a></li>
<li><a href="https://youtu.be/6hnu9hbE3zI">Smart Notes Hacking Session #5: Bubble Base and Trouble Drawing</a></li>
<li><a href="https://youtu.be/AwtkiRIUFdQ">Smart Notes Hacking Session #6: Base Interaction 1</a></li>
<li><a href="https://youtu.be/iIlbNr9EM4E">Smart Notes Hacking Session #7: Base Interaction 2</a></li>
<li><a href="https://youtu.be/mOwefiHJ_YU">Smart Notes Hacking Session #8: Private Access Removal 1</a></li>
<li><a href="https://youtu.be/w6TNMC_MG9o">Smart Notes Hacking Session #9: Private Access Removal 2</a></li>
</ul></li>
<li><p>In the process of editing the videos, I learned about audio editing in Audacity and Ardour.</p></li>
</ul>
]]></description>
    <pubDate>Sun, 04 Apr 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/march-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>Newsletter February 2021</title>
    <link>http://rickardlindberg.me/writing/newsletter/february-2021/</link>
    <description><![CDATA[<h1>Newsletter February 2021</h1>

<p><em>Published on  2 March 2021.</em></p>

<p>This is what I’ve been up to in February 2021:</p>
<ul>
<li><p>I recorded and published two videos where I hack on Smart Notes. In the <a href="https://youtu.be/yIeJYaht4RA">first</a> I fix a bug and in the <a href="https://youtu.be/uyRVhoWb4XY">second</a> I start implementing a new feature.</p></li>
<li><p>In the process of creating the videos, I also learned about video editing using <a href="https://shotcut.org/">Shotcut</a>.</p></li>
<li><p>I finished the <a href="/writing/kinesis-advantage-2-swedish-setup/index.html">blog post</a> about the configuration of my Kinesis Advantage 2 keyboard.</p></li>
<li><p>I played with <a href="https://docs.saltproject.io/en/latest/topics/ssh/">Salt SSH</a>. I’ve used Ansible in the past and I wanted to explore Salt to see how it compared.</p></li>
<li><p>I read more about taking smart notes and the Zettelkasten method. In particular, I read a few articles on <a href="https://zettelkasten.de/">zettelkasten.de</a> that helped me better understand some concepts.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 02 Mar 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/february-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>Newsletter January 2021</title>
    <link>http://rickardlindberg.me/writing/newsletter/january-2021/</link>
    <description><![CDATA[<h1>Newsletter January 2021</h1>

<p><em>Published on  2 February 2021.</em></p>

<p>This is what I’ve been up to in January 2021:</p>
<ul>
<li><p>I posted a <a href="https://www.youtube.com/watch?v=Xh2bik1cOl0">video</a> demoing my note taking application. I have a few ideas of things I would like to improve in it. I’m thinking about recording some hacking sessions and publishing them. Let me know if you would be interested in that.</p></li>
<li><p>I created a simple HTML file upload form to learn more how file transfer over HTTP works. I have an idea for a different kind of CI system that I would like to try and implement. It is a big project and I’ve not committed to anything, so it will likely not happen anytime soon. But I’ve had the idea for a while and felt the urge multiple times to attempt to implement it. Anyway, file transfer over HTTP might be one part of that system.</p></li>
<li><p>I read parts of Clean Code again. Readability is important, but when reading the examples, I couldn’t help to think that no matter how clean we write our code, it would benefit from a description in prose as well. I’m thinking about Literate Programming. Why has it not caught on? Why is nobody using it? I might want to research this topic a bit. I have some practical experience with LP through RLiterate. Perhaps RLiterate can solve some problems with LP. At least it can be a playground for trying out new ideas.</p></li>
<li><p>I continued work on the <a href="/writing/kinesis-advantage-2-swedish-setup/index.html">blog post</a> about the configuration of my Kinesis Advantage 2 keyboard.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 02 Feb 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/january-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>

    </channel>
</rss>
