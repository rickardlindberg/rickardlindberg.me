<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>Rickard's personal homepage: latest posts tagged newsletter</title>
        <link>http://rickardlindberg.me</link>
        <description><![CDATA[Rickard's personal homepage: latest posts tagged newsletter]]></description>
        <atom:link href="http://rickardlindberg.me/tags/newsletter/rss.xml" rel="self"
                   type="application/rss+xml" />
        <lastBuildDate>Sat, 08 Oct 2022 00:00:00 UT</lastBuildDate>
        <item>
    <title>September 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/september-2022/</link>
    <description><![CDATA[<h1>September 2022 Update</h1>

<p><em>Published on  8 October 2022.</em></p>

<p>This is what I’ve been up to in September 2022:</p>
<ul>
<li><p>I finally finished writing <a href="/writing/reliable-socket-servers/index.html">How to write reliable socket servers that survive crashes and restarts?</a></p></li>
<li><p>I watched <a href="https://youtu.be/ulRCs7xQA74">Continuous Delivery vs. Gitflow &amp; CD At Scale | Bryan Finster In The Engineering Room Ep. 11</a>. In it, Bryan mention a metaphor with flying cards. The idea was that it is difficult to explain the concept of a flying car to someone who has never experienced it. It’s too foreign. I thought about how I could expose people to more “flying cars”. Make them experience TDD, CI/CD, etc, so that they never wanting to go back.</p></li>
<li><p>I think it was also in the video above that Dave said something along the lines that it’s amazing how much you start caring about testing if you are the one on call. That resonated with me. If you are responsible, you start caring. It also reminded me of another concept about how much to test, where the advice was something like test until fear turns into boredom. (I think I read it from <a href="https://twitter.com/jbrains">jbrains</a>, but <a href="https://twitter.com/jbrains/status/663451314341416960">it seems</a> to originally be from someone else.)</p></li>
<li><p>I published another five programming videos on my <a href="https://www.youtube.com/channel/UC4XI09URnsM_YYTSizAMliA">Youtube channel</a>:</p>
<ul>
<li><a href="https://youtu.be/tu3Sbm78SpY">How to write reliable socket servers that survive crashes and restarts?</a></li>
<li><a href="https://youtu.be/X5yIEELf4t0">What does working in small steps look like?</a></li>
<li><a href="https://youtu.be/IWAx1-thc_w">Are you running your tests often enough?</a></li>
<li><a href="https://youtu.be/1bDEHWKjbyQ">My continuous integration workflow.</a></li>
<li><a href="https://youtu.be/kdYE7_9-5Ng">My workflow for making changes to software.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sat, 08 Oct 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/september-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>August 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/august-2022/</link>
    <description><![CDATA[<h1>August 2022 Update</h1>

<p><em>Published on  9 September 2022.</em></p>

<p>This is what I’ve been up to in August 2022:</p>
<ul>
<li><p>I was interested in learning more how to slice stories to make them smaller but still valuable. I found Ron’s article <a href="https://ronjeffries.com/xprog/articles/getting-small-stories/">Getting Small Stories</a> very useful. Having one “dumb” idea can change the conversation from “that is impossible” to “how can we make it better”.</p></li>
<li><p>I also read Ron’s book <a href="https://pragprog.com/titles/rjnsd/the-nature-of-software-development/">The Nature of Software Development</a>. In it he talks about focusing on value and that value is something that <em>we want</em>. But who is <em>we</em>? When I am working on software that I use, I can ask myself what I want. But in most cases I’m not the only user of the software that I write. <em>We</em> are probably many different people.</p></li>
<li><p>I’ve though about writing a book about how to implement programming languages. It would use <a href="/projects/rlmeta/index.html">RLMeta</a> for the examples. But writing a book seems like a daunting task. I started thinking that I could approach writing the book the same way I approach writing software in an agile fashion with small stories. I can create the first version of the “book” in one day. Then I can improve it by writing more chapters and going into more details.</p></li>
<li><p>I continued writing <a href="/writing/reliable-socket-servers/index.html">How to write reliable socket servers that survive crashes and restarts?</a></p></li>
<li><p>I watched the Mob Mentality Show <a href="https://youtu.be/nLUFPHUS2Pk">Agile vs. Agility with Allen Holub</a>. I’ve been inspired by Allen’s talk about Agile, and I got value from this episode.</p></li>
<li><p>I published another four programming videos on my <a href="https://www.youtube.com/channel/UC4XI09URnsM_YYTSizAMliA">Youtube channel</a>:</p>
<ul>
<li><a href="https://youtu.be/BXyiqhqXT0U">I did the simplest thing that could possibly work. Here’s what happened.</a></li>
<li><a href="https://youtu.be/XldYdxAlH2o">Converting RLCI to client/server architecture (part 1/3).</a></li>
<li><a href="https://youtu.be/9HQB9pt4v30">Converting RLCI to client/server architecture (part 2/3).</a></li>
<li><a href="https://youtu.be/GBfUerlQfuI">Converting RLCI to client/server architecture (part 3/3).</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Fri, 09 Sep 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/august-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>July 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/july-2022/</link>
    <description><![CDATA[<h1>July 2022 Update</h1>

<p><em>Published on  2 August 2022.</em></p>

<p>This is what I’ve been up to in July 2022:</p>
<ul>
<li><p>I continued practicing Agile software development with <a href="https://github.com/rickardlindberg/rlci/">RLCI</a>. I slowly get the feeling that Agile is not really what most people think it is. Some things I read and watched this month in that vein:</p>
<ul>
<li><p>A <a href="https://twitter.com/allenholub/status/1546604233323032576">few</a> <a href="https://twitter.com/allenholub/status/1552432052762320896">tweets</a> by Allen Holub and a <a href="https://youtu.be/hxXmTnb3mFU">conversation</a> he had with Dave Farley gave me some insights into what “real” Agile is about.</p></li>
<li><p><a href="https://www.sicpers.info/2022/07/phrases-in-computing-that-might-need-retiring/">Phrases in computing that might need retiring</a> by Graham Lee indicated to me that the term “Agile” has changed meaning over the years.</p></li>
<li><p><a href="https://www.ronjeffries.com/articles/-z022/0222ff/gotta-be-good/">Gotta Be Good</a> by Ron Reffries indicated to me that “real” Agile is actually HARD and need to be practiced to get good at.</p></li>
</ul></li>
<li><p>I published another five programming videos on my <a href="https://www.youtube.com/channel/UC4XI09URnsM_YYTSizAMliA">Youtube channel</a>:</p>
<ul>
<li><a href="https://youtu.be/d7fq8JyU9jg">How to write tests that allow refactoring your code?</a></li>
<li><a href="https://youtu.be/BmUz4my7eko">Deploying my continuous integration software to a server.</a></li>
<li><a href="https://youtu.be/C05OD7h0-gg">Therapeutic refactoring and polishing of a feature.</a></li>
<li><a href="https://youtu.be/h_oRLiJo3Tc">How to incorporate evolutionary design into the development process?</a></li>
<li><a href="https://youtu.be/WlvsjCeuT6w">I made a mistake when evolving the design of RLCI to support a database.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Tue, 02 Aug 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/july-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>June 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/june-2022/</link>
    <description><![CDATA[<h1>June 2022 Update</h1>

<p><em>Published on  4 July 2022.</em></p>

<p>This is what I’ve been up to in June 2022:</p>
<ul>
<li><p>I started over with <a href="https://github.com/rickardlindberg/rlci/">RLCI</a> and tried to build it using an agile approach. The README has a bunch of more information about it. In this process, the following resources helped me:</p>
<ul>
<li><p><a href="https://www.jamesshore.com/v2/blog/2018/testing-without-mocks">Testing Without Mocks: A Pattern Language</a> Again from James Shore. Gave me insight into how to design and test.</p></li>
<li><p><a href="https://blog.thecodewhisperer.com/permalink/you-dont-hate-mocks-you-hate-side-effects">You Don’t Hate Mocks; You Hate Side-Effects</a> The following quote explained it well to me the design relationship between pure functions and functions with side effects:</p>
<blockquote>
<p>We always have the option of replacing a side-effect with returning a value that represents the effect, as long as we can instruct the clients to interpret that value as a command to execute.</p>
</blockquote></li>
<li><p><a href="https://stackoverflow.blog/2022/01/03/favor-real-dependencies-for-unit-testing/">Favor real dependencies for unit testing</a> This helped me solve a testing problem I had. More on that in an upcoming video.</p></li>
</ul></li>
<li><p>I discovered that one of the authors of <em>Continuous Delivery</em>, Dave Farley, has a <a href="https://www.youtube.com/c/ContinuousDelivery">Youtube channel</a>. I found some of his videos interesting.</p></li>
<li><p>I published another four programming videos on my <a href="https://www.youtube.com/channel/UC4XI09URnsM_YYTSizAMliA">Youtube channel</a>:</p>
<ul>
<li><a href="https://youtu.be/yKkGXn1zmaI">How James Shore ruined my RLCI project.</a></li>
<li><a href="https://youtu.be/Re7litDdulU">Rebooting RLCI with an agile approach using TDD and zero friction development.</a></li>
<li><a href="https://youtu.be/sokSvnAkd5E">Adding continuous integration functionality to RLCI.</a></li>
<li><a href="https://youtu.be/0jJEPgomRCc">Making RLCI pipelines run in isolation.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Mon, 04 Jul 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/june-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>May 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/may-2022/</link>
    <description><![CDATA[<h1>May 2022 Update</h1>

<p><em>Published on  4 June 2022.</em></p>

<p>This is what I’ve been up to in May 2022:</p>
<ul>
<li><p>I rediscovered James Shore through his <a href="https://www.jamesshore.com/v2/books/aoad2/book_club/evolutionary_design">Agile Book Club: Evolutionary Design (with Kent Beck)</a>. I had stumbled upon his <a href="https://www.jamesshore.com/v2/projects/lunch-and-learn">TDD Lunch &amp; Learn</a> series before, and the book club made me revisit some of his work. This time I also bought his book <a href="https://www.jamesshore.com/v2/books/aoad2">The Art of Agile Development</a> which reignited my interest for agile methods (something that has diminished more and more since I first got into it).</p></li>
<li><p>I read <a href="https://alangrow.com/blog/dream-deploys-atomic-zero-downtime-deployments">Dream Deploys: Atomic, Zero-Downtime Deployments</a> and got inspired to try that approach. I also started working on a <a href="/writing/reliable-socket-servers/index.html">blog post</a> on my own to explore the topic.</p></li>
<li><p>I continued working on <a href="https://github.com/rickardlindberg/rlci/">RLCI</a> and worked on connecting the different pieces. However, after getting inspired by agile methods again and learning that continuous integration is not what I thought it was (thanks for the inspiration James!), I will have to rethink the project. I think I will start over from scratch and develop it with a slightly new approach.</p></li>
<li><p>I published another four programming videos on my <a href="https://www.youtube.com/channel/UC4XI09URnsM_YYTSizAMliA">Youtube channel</a>:</p>
<ul>
<li><a href="https://youtu.be/R-HCtiVzYuI">Connecting all the pieces in RLCI.</a></li>
<li><a href="https://youtu.be/BQ-wWIVQ_gs">Researching zero downtime deployments.</a></li>
<li><a href="https://youtu.be/S_R80ZhsmZo">Getting back to the roots of TDD.</a></li>
<li><a href="https://youtu.be/Xm8QGMzyxeI">Practicing TDD and testing without mocks.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sat, 04 Jun 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/may-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>April 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/april-2022/</link>
    <description><![CDATA[<h1>April 2022 Update</h1>

<p><em>Published on  1 May 2022.</em></p>

<p>This is what I’ve been up to in April 2022:</p>
<ul>
<li><p>I continued working on <a href="https://github.com/rickardlindberg/rlci/">RLCI</a>. In particular I started working on the server component and wrote it using <a href="https://docs.python.org/3/library/asyncio.html">asyncio</a>. So far, that feels like a good choice.</p></li>
<li><p>I read <a href="https://www.martinfowler.com/books/refactoringDatabases.html">Refactoring databases</a> and started reading <a href="https://www.martinfowler.com/books/nosql.html">NoSQL Distilled</a>. The reason I picked up the first one was that I sought to understand how you can do zero-downtime deployments and still evolve your database. That is, how can both an old version of an application and a new version of an application work with the same database? The answer was that you must evolve your database schema such that it is compatible with both versions. So if you move a column for example, you can create a trigger that make sure that both the old and the new column are in sync. And when a transition period is over, you can drop the old column, and the move column refactoring is complete. I picked up the second book to find if the answer was any different for NoSQL databases which generally are a bit more flexible when it comes to database schema. My guess is that a similar approach is needed. So far the book has given me some new ideas about what databases are for and how different databases serve different purposes. This will all be useful in going forward with a storage mechanism for RCLI.</p></li>
<li><p>I published another five programming videos on my Youtube channel:</p>
<ul>
<li><a href="https://youtu.be/lqV5c_fN29Q">How to find time to work on your hobby projects?</a></li>
<li><a href="https://youtu.be/aXkGdvKZu1A">How I got unstuck with RLCI.</a></li>
<li><a href="https://youtu.be/GO-sfUaqbvg">Learning Python asyncio when working on CI server.</a></li>
<li><a href="https://youtu.be/ihS0HagBfKY">What makes programming videos interesting?</a></li>
<li><a href="https://youtu.be/uV2eeAcrxzU">Refactoring a class to test in isolation: REAL WORLD EXAMPLE</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sun, 01 May 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/april-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>March 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/march-2022/</link>
    <description><![CDATA[<h1>March 2022 Update</h1>

<p><em>Published on  2 April 2022.</em></p>

<p>This is what I’ve been up to in March 2022:</p>
<ul>
<li><p>I started prototyping <a href="https://github.com/rickardlindberg/rlci/">RLCI</a> which is an experimental CI/CD system designed to solve problems I’ve had with Jenkins. I made some videos about it too.</p></li>
<li><p>I published another four programming videos on my Youtube channel:</p>
<ul>
<li><a href="https://youtu.be/pZwjYknDxYo">Sharing thoughts about a new CI system that solves problems I’ve had with Jenkins.</a></li>
<li><a href="https://youtu.be/-iSgZkqlUVw">Thinking about representations for CI pipelines.</a></li>
<li><a href="https://youtu.be/oPX8bBTNBMI">Demoing prototype of CI/CD system.</a></li>
<li><a href="https://youtu.be/RHy-oryo5rI">How can a worker node execute code on behalf of a CI/CD server?</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Sat, 02 Apr 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/march-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>February 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/february-2022/</link>
    <description><![CDATA[<h1>February 2022 Update</h1>

<p><em>Published on  2 March 2022.</em></p>

<p>This is what I’ve been up to in February 2022:</p>
<ul>
<li><p>I finished the blog post about the new version of <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a>.</p></li>
<li><p>I published another four programming videos on my Youtube channel:</p>
<ul>
<li><a href="https://youtu.be/stBGg7v-URg">How I got consumed by a programming problem and recovered.</a></li>
<li><a href="https://youtu.be/ACTO7AfB_zQ">Adding LISP-style function calls to RLMeta.</a></li>
<li><a href="https://youtu.be/riJUqBPx1uU">Solving Advent of Code 2021 Day 14 using Python without any libraries.</a></li>
<li><a href="https://youtu.be/84IUZVyFrh8">Demoing new image export dialog in Timeline version 2.6.0.</a></li>
</ul></li>
</ul>
]]></description>
    <pubDate>Wed, 02 Mar 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/february-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>January 2022 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/january-2022/</link>
    <description><![CDATA[<h1>January 2022 Update</h1>

<p><em>Published on  4 February 2022.</em></p>

<p>This is what I’ve been up to in January 2022:</p>
<ul>
<li><p>I did more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. I took some larger time blocks to work on it, and I can now finally see it being finished next month.</p></li>
<li><p>I decided to set up a <a href="https://github.com/rickardlindberg/rlmeta">repo on GitHub</a> for RLMeta where it can continue to be improved. I plan for it to contain the base version of RLMeta which is the minimal version that is able to compile itself and maintain properties such as flexible, easy to extend, and easy to understand. Then I want to include examples as well to show how RLMeta can be used and how you can extend it in various ways.</p></li>
<li><p>I started publishing weekly programming videos on Youtube. My goal for 2022 is to make one programming related video each week. I’m currently in the process of finding a good format or formats, and I am experimenting a lot. This month I made the following videos:</p>
<ul>
<li><a href="https://youtu.be/NsVERD6Xvvw">I’m starting weekly programming videos on Youtube.</a></li>
<li><a href="https://youtu.be/6lqdJvSuZpk">How a Python programmer extracts timelapses from camera SD card.</a></li>
<li><a href="https://youtu.be/aT2XbyMv53E">Writing a decoder for the “Quite OK Image Format” (QOI) in 55 lines of RLMeta.</a></li>
<li><a href="https://youtu.be/V3oUnhyCSkY">Rewriting QOI decoder semantic action in Python for clarity and speed.</a></li>
</ul></li>
<li><p>I got an urge to write a projectional editor to learn more about projectional editing. It’s something I’ve been thinking about before and have tried to incorporate a bit in <a href="/projects/rliterate/index.html">RLiterate</a>.</p></li>
<li><p>I watched <a href="https://youtu.be/dP1xVpMPn8M">A Tour of the Acme Editor</a> by Russ Cox. Acme felt like a different and unique text editor with an interesting approach.</p></li>
<li><p>I did some work to update my <a href="https://github.com/rickardlindberg/dotfiles/">dotfiles</a>. Mainly to simplify and add support for different setups. When I am recording videos for Youtube, for example, I want to have bigger font size in various applications. With my new dotfiles, I can now quickly switch between different setups.</p></li>
</ul>
]]></description>
    <pubDate>Fri, 04 Feb 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/january-2022/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>December 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/december-2021/</link>
    <description><![CDATA[<h1>December 2021 Update</h1>

<p><em>Published on  4 January 2022.</em></p>

<p>This is what I’ve been up to in December 2021:</p>
<ul>
<li><p>I did more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. I wrote for quite many days, but not for a very long time each day. I believe consistency works better. After each small edit, I published the draft. I will continue writing in January.</p></li>
<li><p>After quite a long absence, I made a contribution to <a href="/projects/timeline/index.html">Timeline</a> again. The contribution was to replace all image export dialogs with a better, more flexible one. I got inspired to work on this because of a problem that a user expressed on the mailing list. The new dialog will hopefully make the user experience a bit better and it simplified the code base. After the initial version, I had to make tweaks to make it work good on both Linux and Windows. Even though wxPython is cross-platform, you can still run into issues that are platform specific.</p></li>
<li><p>I started planning and recording a series of programming videos that I will publish on Youtube. My goal for 2022 is to publish one video every week. More on that in the first video, which I have planned for 7th of January.</p></li>
<li><p>I watched <a href="https://youtu.be/GgsRQuGSrc0">Building an encoder for the “Quite OK Image Format” (QOI)</a>. It inspired me to try and write a QOI decoder in RLMeta. I plan to make a video about that.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 04 Jan 2022 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/december-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>November 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/november-2021/</link>
    <description><![CDATA[<h1>November 2021 Update</h1>

<p><em>Published on  2 December 2021.</em></p>

<p>This is what I’ve been up to in November 2021:</p>
<ul>
<li><p>I managed to do a little more writing on the <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a> blog post. Not as much as I had hoped, but I plan to continue working on it in December.</p></li>
<li><p>Since I started getting interested in cameras and making videos, my spare time, and perhaps also interest, for programming has decreased. It is still a big interest of mine, so I don’t think it has gone away. I have mostly made videos for myself, but perhaps I can combine my two interests and make programming videos of some sort.</p></li>
<li><p>I got an email from someone with a question about my article on <a href="/writing/expr-to-x86-compiler/index.html">compiling expressions to x86 machine code</a>. I don’t often get any feedback on my blog posts, but whenever I do, I get happy because then it feels like someone appreciated what I did.</p></li>
</ul>
]]></description>
    <pubDate>Thu, 02 Dec 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/november-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>October 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/october-2021/</link>
    <description><![CDATA[<h1>October 2021 Update</h1>

<p><em>Published on  4 November 2021.</em></p>

<p>This is what I’ve been up to in October 2021:</p>
<ul>
<li><p>I set up some infrastructure for writing the blog post about <a href="/writing/rlmeta-poster-2/index.html">RLMeta</a>. Now I can automatically generate the post with up to date code examples and syntax highlighting. I didn’t make much progress on the writing itself. Hopefully I can make more progress on that in November.</p></li>
<li><p>I got an email from a person that was interested in old project of mine: <a href="https://github.com/frp-arduino/frp-arduino">frp-arduino</a>. It was nice to see that something I’ve put into the world sparked an interest in someone else.</p></li>
<li><p>I read a <a href="https://twitter.com/seanmcdirmid18/status/1448500893331058692">tweet</a> by Sean McDirmid about incremental parsing. I asked him if his approach was similar to the one used in <a href="https://ohmlang.github.io/pubs/sle2017/incremental-packrat-parsing.pdf">Ohm</a> (a paper which he also reviewed), but it was different. The approach used in Ohm could probably be more easily implemented in RLMeta.</p></li>
<li><p>Besides programming I spend much time learning more about cameras and videography. This homepage is mostly dedicated to my interest for programming, so I’m not sure how much I want to write about camera related stuff.</p></li>
</ul>
]]></description>
    <pubDate>Thu, 04 Nov 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/october-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>September 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/september-2021/</link>
    <description><![CDATA[<h1>September 2021 Update</h1>

<p><em>Published on  9 October 2021.</em></p>

<p>This is what I’ve been up to in September 2021:</p>
<ul>
<li><p>I created a short movie about what programming is like for me. You can watch it <a href="https://youtu.be/jYvMbSTvns8">here</a> and read about my behind the scenes thoughts <a href="/writing/what-is-programming/index.html">here</a>. I mainly did it to explore movie making.</p></li>
<li><p>I continued to work on RLMeta. Specifically on the <a href="/writing/rlmeta-poster-2/index.html">second poster version</a>.</p>
<ul>
<li><p>At first my plan was to make a second poster with an improved version of RLMeta. The goal would be to showcase an even more beautiful implementation.</p></li>
<li><p>However, the idea of a second poster was putting too much pressure on me. If I did a second poster, I would want it to be perfect. And I never seemed to get there. I was able to improve many things in RLMeta, but somehow imperfections always kept creeping in.</p></li>
<li><p>So to relief the pressure of making a more polished poster, I decided to instead write a blog post about this new version in a “code walkthrough” style. That blog post could be the start of a README for a dedicated project repo for RLMeta. At some time I would have to publish the blog post, so that is a bit of a pressure, but I can more easily tweak it closer to publishing time because generating a new blog post is an automatic process whereas creating a poster from source code is a manuall process (that requires manual layout decisions). The blog post will be another way to showcase RLMeta.</p></li>
</ul></li>
<li><p>I read about <a href="https://handmade.network/manifesto">Handmade</a>. I was inspired by the idea to implement more things “by hand” and not layer abstraction on abstraction that creates a slow mess. I though about designing programming systems where you could more easily implement things at a lower level to avoid creating lots of abstractions when not needed.</p></li>
<li><p>I created a dedicated notebook for project ideas that I have. I have more ideas than I have time to work on. I think I need to focus on one project at a time to make progress.</p></li>
<li><p>I thought about how to make hobby programming a habit. My hobby projects are things I want to make progress on, but on the other hand, they should be fun. They are hobby projects right? But even hobby projects are not interesting all the time. Sometimes you just have to push through.</p></li>
</ul>
]]></description>
    <pubDate>Sat, 09 Oct 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/september-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>August 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/august-2021/</link>
    <description><![CDATA[<h1>August 2021 Update</h1>

<p><em>Published on  7 September 2021.</em></p>

<p>This is what I’ve been up to in August 2021:</p>
<ul>
<li><p>I continued with the draft post <a href="/writing/rlmeta-poster-2/index.html">RLMeta poster 2</a>.</p>
<ul>
<li><p>I had some ideas of things I wanted to improve in the next version of RLMeta. But mainly, I just wanted to work on it again because I think it is a fun piece of software to work on.</p></li>
<li><p>Before I could continue to improve RLMeta, I first had to port it to Python 3 because my new laptop now runs Python 3. The port was rather small.</p></li>
<li><p>I then continued with various improvements that I plan to document in the blog post.</p></li>
<li><p>I’m not sure that the final product of the blog post is going to be a poster. Right now I’m thinking it should be some kind of interactive, live, demo that you can play with in your browser that illustrates, somewhat similar to the poster, how RLMeta works. That would also require a port of RLMeta to Javascript, which should be fun.</p></li>
<li><p>I find it difficult to know when to stop improving RLMeta. Sometimes I feel like I chase perfection. In every iteration, I get closer, but there seems to always be something left that annoys me.</p></li>
<li><p>My next big goal with RLMeta is to make it not depend on Python. In order for that to happen, I need to implement a subset of the Python language that RLMeta uses. All the way down to machine code. So it is a quite big project, but should be fun.</p></li>
</ul></li>
<li><p>I thought about where it makes sense to put CI/CD code. The most common place to put it in (that I’ve seen) is in the repository itself. But I feel like that is not the most logical place. Information about how to use a project in a CI/CD chain should not be coupled with the project itself. I feel like build scripts belong in the repository because how to build a piece of software feels related to the project itself. But in CI/CD, you often deal with larger aspects than the project in isolation. For example, in a CI/CD chain you might want to send email notifications upon build failure. That is not related to the project. It is related to how you implement CI/CD. So I’m thinking that a CI/CD system should be programmed separately from the project repos.</p></li>
<li><p>I got inspired by <a href="https://www.youtube.com/watch?v=bpbYyF-FBqU">this video</a> by Van Neistat about a tool he can’t live well without: the pencil. I could relate to that as I also feel that the pencil is “the pump that brings up the ideas from the well”, so I decided to buy a T-shirt:</p>
<center>
<p><img src="pencil.jpg"></p>
</center></li>
</ul>
]]></description>
    <pubDate>Tue, 07 Sep 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/august-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>
<item>
    <title>July 2021 Update</title>
    <link>http://rickardlindberg.me/writing/newsletter/july-2021/</link>
    <description><![CDATA[<h1>July 2021 Update</h1>

<p><em>Published on  3 August 2021.</em></p>

<p>This is what I’ve been up to in July 2021:</p>
<ul>
<li><p>I cleaned up the rlselect repo and recorded a new demo gif. You can see it at the <a href="/projects/rlselect/index.html">project page</a>. I did not improve the literate document because I had no incentive to do so. The application does what I want it to do, and from a maintenance point of view, I can continue to improve it with smart notes literate programming support. But as long as there is nothing I want to improve in the application, I think I will leave it like this. I know the application does some trick with stdin/stdout that might be interesting to write a blog post about. If I decide to do that, I might start by explaining the trick inside the literate document, and then write the blog post.</p></li>
<li><p>I felt the urge to work on a Timeline canvas component. That is, only the timeline widget in <a href="/projects/timeline/index.html">Timeline</a>. It’s been a long time since I first started the project, and I would probably do some things differently today. An isolated component could also be useful for other projects.</p></li>
<li><p>I revisited RLMeta and wanted to work more on it. I have some ideas of what to work on next. We will see.</p></li>
<li><p>I decided to skip doing a video version of this update, and probably future updates as well. I don’t think the updates were a good fit for video. These updates are useful for me because I like to go back and get a quick overview of what I was doing. A bullet list works perfect for that. A non searchable video does not. I might record only demos if I have any and link them in the update. We will see. I still enjoy making videos.</p></li>
<li><p>I shot daily vlogs (not published online) during two weeks of my vacation, and that is something I enjoyed to do. So I got to practice shooting, editing, story telling, etc. I also watched much Casey Neistat and Peter Lindgren for inspiration.</p></li>
<li><p>I watched “The Social Dilemma” and though about how I missed when the internet was just a bunch of personal homepages not controlled by a few companies.</p></li>
</ul>
]]></description>
    <pubDate>Tue, 03 Aug 2021 00:00:00 UT</pubDate>
    <guid>http://rickardlindberg.me/writing/newsletter/july-2021/</guid>
    <dc:creator>Rickard Lindberg</dc:creator>
</item>

    </channel>
</rss>
